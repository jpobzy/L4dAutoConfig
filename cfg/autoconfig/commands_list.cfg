//  ———————————————————————————————————————————————————————————————————————————————————————————
//                     __                                     ___                 
//                    /\ \__                                /'___\ __             
//       __     __  __\ \ ,_\   ___     ___    ___     ___ /\ \__//\_\     __     
//     /'__`\  /\ \/\ \\ \ \/  / __`\  /'___\ / __`\ /' _ `\ \ ,__\/\ \  /'_ `\   
//    /\ \L\.\_\ \ \_\ \\ \ \_/\ \L\ \/\ \__//\ \L\ \/\ \/\ \ \ \_/\ \ \/\ \L\ \  
//    \ \__/.\_\\ \____/ \ \__\ \____/\ \____\ \____/\ \_\ \_\ \_\  \ \_\ \____ \ 
//     \/__/\/_/ \/___/   \/__/\/___/  \/____/\/___/  \/_/\/_/\/_/   \/_/\/___L\ \
//                                                                         /\____/
//                                                                         \_/__/ 
//     __                   _____                  __                             
//    /\ \                 /\___ \                /\ \                            
//    \ \ \____  __  __    \/__/\ \  _____     ___\ \ \____  ____    __  __       
//     \ \ '__`\/\ \/\ \      _\ \ \/\ '__`\  / __`\ \ '__`\/\_ ,`\ /\ \/\ \      
//      \ \ \L\ \ \ \_\ \    /\ \_\ \ \ \L\ \/\ \L\ \ \ \L\ \/_/  /_\ \ \_\ \     
//       \ \_,__/\/`____ \   \ \____/\ \ ,__/\ \____/\ \_,__/ /\____\\/`____ \    
//        \/___/  `/___/> \   \/___/  \ \ \/  \/___/  \/___/  \/____/ `/___/> \   
//                   /\___/            \ \_\                             /\___/   
//                   \/__/              \/_/                             \/__/    
//    
//  ——————————————————————————————————————————————————————————————————————————————————————————

// Filename: commands_list.cfg
// Version: 1.0
// Author: https://github.com/jpobzy
// Source: https://github.com/jpobzy/L4dAutoConfig
// License: MIT License
// Contact information: https://steamcommunity.com/profiles/76561198855075791/

//  —————————————————————————————————————————————————————————————————————————————————————————— 
//  README  
//  ——————————————————————————————————————————————————————————————————————————————————————————  
// 
// I HIGHLY recommend you read each command to fully understand what is being changed/modified 
// from the original game settings. Should you feel the need to either remove/modify a 
// command, I recommend that you first comment it out by typing " // " at the beginning of the 
// line just like the current line and then copying and pasting the command so that the 
// command is not accidentally lost. Uncommenting a command WILL result with the command being 
// executed everytime you launch the game therefor overridng your previous config. Some 
// commands are not given a description as I am  not 100% confident what they do but 
// are the original settings that came with the game. All possible console commands will be 
// located in the "commands_list.cfg" file.
//
//  ——————————————————————————————————————————————————————————————————————————————————————————    

//  —————————————————————————————————————————————————————————————————————————————————————————— 
// Description  
//  ——————————————————————————————————————————————————————————————————————————————————————————  
// 
// The purpose of this file is to show all possible commands that can be typed in console
// Command list was originally made here: https://www.gamerconfig.eu/commands/left-4-dead
//
//  ——————————————————————————————————————————————————————————————————————————————————————————  



+alt1
+alt2
+attack
+attack2
+back
+break
+camdistance
+camin
+cammousemove
+camout
+campitchdown
+campitchup
+camyawleft
+camyawright
+commandermousemove
+demoui2 // Bring the advanced demo player UI (demoui2) to foreground.
+duck
+forward
+graph
+grenade1
+grenade2
+invaction
+jlook
+jump
+klook
+left
+lookdown
+lookspin
+lookup
+mat_texture_list
+menuAccept
+menuDown
+menuUp
+mouse_menu // Opens a menu while held
+movedown
+moveleft
+moveright
+moveup
+posedebug // Turn on pose debugger or add ents to pose debugger UI
+reload


+right
+score
+showbudget
+showbudget_texture
+showbudget_texture_global
+showscores
+showvprof
+speed
+strafe
+use
+vgui_drawtree
+voicerecord
+walk
+zoom
-alt1
-alt2
-attack
-attack2
-back
-break
-camdistance
-camin
-cammousemove
-camout
-campitchdown
-campitchup
-camyawleft
-camyawright
-commandermousemove
-demoui2 // Send the advanced demo player UI (demoui2) to background.
-duck
-forward
-graph
-grenade1
-grenade2
-invaction
-jlook
-jump
-klook
-left
-lookdown
-lookspin
-lookup
-mat_texture_list
-menuAccept
-menuDown
-menuUp
-mouse_menu // Executes the highlighted button on the radial menu (if cl_fastradial is 1)
-movedown
-moveleft
-moveright
-moveup
-posedebug // Turn off pose debugger or hide ents from pose debugger UI
-reload
-right
-score
-showbudget
-showbudget_texture
-showbudget_texture_global
-showscores
-showvprof
-speed
-strafe
-use
-vgui_drawtree
-voicerecord
-walk
-zoom
achievement_debug "0" // Turn on achievement debug msgs.
achievement_disable "0" // Turn off achievements.
addip // Add an IP address to the ban list.
adsp_debug "0"
air_density // Changes the density of air for drag computations.
ai_debug_los "0" // itl
ai_debug_shoot_positions "0"
ai_talk_idle_enabled "1" // Set to 0 to disable TLK_IDLEs on survivors
alias // Alias a command.
askconnect_accept // Accept a redirect request by the server.
async_resume
async_suspend
audit_save_in_memory // Audit the memory usage and files in the save-to-memory system
autosave // Autosave
autosavedangerous // AutoSaveDangerous
autosavedangerousissafe
banid // Add a user ID to the ban list.
banip // Add an IP address to the ban list.
benchframe // Takes a snapshot of a particular frame in a time demo.
bench_end // Ends gathering of info.
bench_start // Starts gathering of info. Arguments: filename to write results into
bench_upload // Uploads most recent benchmark stats to the Valve servers.
bind // Bind a key.
BindToggle // Performs a bind <key> increment var <cvar> 0 1 1
blackbox_dump // Dump the contents of the blackbox
blackbox_record // Record an entry into the blackbox
boomer_exposed_time_tolerance "1" // How long an out-of-range Boomer will tolerate being visible before fleeing
boomer_pz_claw_dmg "4" // Amount of damage done by a PZ boomers regular melee attack
boomer_vomit_delay "1" // How long the Boomer waits before he vomits on his target on Normal difficulty
bot_crouch "0"
bot_freeze "0"
bot_mimic "0"
bot_mimic_spec_buttons "1" // +jump etc are used for spectator control instead of being passed on to spectated bot
bot_mimic_yaw_offset "180"
box // Draw a debug box.
buddha "0" // Survivors take damage but wont die
budget_averages_window "30" // number of frames to look at when figuring out average frametimes
budget_background_alpha "128" // how translucent the budget panel is
budget_bargraph_background_alpha "128" // how translucent the budget panel is
budget_bargraph_range_ms "16" // budget bargraph range in milliseconds
budget_history_numsamplesvisible "100" // number of samples to draw in the budget history window. The lower the better as far as rendering overhead of the budget panel
budget_history_range_ms "66" // budget history range in milliseconds
budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
budget_panel_height "384" // height in pixels of the budget panel
budget_panel_width "512" // width in pixels of the budget panel
budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
budget_panel_y "50" // number of pixels from the top side of the game screen to draw the budget panel
budget_peaks_window "30" // number of frames to look at when figuring out peak frametimes
budget_show_averages "0" // enable/disable averages in the budget panel
budget_show_history "1" // turn history graph off and on. . good to turn off on low end
budget_show_peaks "1" // enable/disable peaks in the budget panel
budget_toggle_group // Turn a budget group on/off
bug // Show the bug reporting UI.
bugreporter_uploadasync "0" // Upload attachments asynchronously
bugreporter_username "0" // Username to use for bugreporter
bug_swap // Automatically swaps the current weapon for the bug bait and back again.
buildcubemaps // Rebuild cubemaps.
cache_print // cache_print [section] Print out contents of cache memory.
cache_print_lru // cache_print_lru [section] Print out contents of cache memory.
cache_print_summary // cache_print_summary [section] Print out a summary contents of cache memory.
callvote // Start a vote on an issue.
camortho // Switch to orthographic camera.
cam_collision "1" // an attempt is made to keep the camera from passing though walls.
cam_command // Tells camera to change modes
cam_idealdelta "4" // Controls the speed when matching offset to ideal angles in thirdperson view
cam_idealdist "150"
cam_ideallag "4" // Amount of lag used when matching offset to ideal angles in thirdperson view
cam_idealpitch "0"
cam_idealyaw "0"
cam_showangles "0" // print viewangles/idealangles/cameraoffsets to the console.
cam_snapto "0"
cancelselect
cast_hull // Tests hull collision detection
cast_ray // Tests collision detection
cc_emit // Emits a closed caption
cc_findsound // Searches for soundname which emits specified text.
cc_flush // Flushes asyncd captions.
cc_lang "0" // Current close caption language (emtpy = use game UI language)
cc_linger_time "1" // Close caption linger time.
cc_predisplay_time "0" // Close caption delay before showing caption.
cc_random // Emits a random caption
cc_showblocks // Toggles showing which blocks are pending/loaded async.
cc_subtitles "0" // wont help hearing impaired players).
centerview
changelevel // Change server to the specified map
changelevel2 // Transition to the specified map in single player
changelevel_inhibit "0"
changelevel_pause_interval "8"
chet_debug_idle "0" // many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info
chooseteam // Choose a new team
ch_createairboat // Spawn airboat in front of the player.
ch_createjeep // Spawn jeep in front of the player.
claw_force "240" // Force with witch the claw shoves other zombies away
claw_plays_hit_anims "0" // Play the new hit anims for debugging?
claw_range "52" // Range of the Claw weapon
claw_range_down "70" // so it can reach your feet from your eyes.
claw_swing_duration "0"
claw_swing_interval "1"
claw_swing_miss_interval "0"
clear // Clear all console output.
clear_attribute // Remove given attribute from all areas in the selected set.
clear_debug_overlays // clears debug overlays
clientport "27005" // Host game client port
closecaption "0" // Enable close captioning.
cl_allowdownload "1" // Client downloads customization files
cl_allowupload "1" // Client uploads customization files
cl_animationinfo // Hud element to examine.
cl_autohelp "1" // Auto-help
cl_bob "0"
cl_bobcycle "0"
cl_bobup "0"
cl_buy_favorite // Purchase a favorite weapon/equipment loadout
cl_buy_favorite_nowarn "0" // Skips the error prompt when saving an invalid buy favorite
cl_buy_favorite_quiet "0" // Skips the prompt when saving a buy favorite in the buy menu
cl_buy_favorite_reset // Reset favorite loadouts to the default
cl_buy_favorite_set // Saves the current loadout as a favorite
cl_chatfilters "31" // Stores the chat filter settings
cl_chat_wipehistory "0" // Wipes chat history after all chat text faded out
cl_cinematiclight_b "0"
cl_cinematiclight_g "0"
cl_cinematiclight_r "3"
cl_cinematiclight_scale "7"
cl_cinematiclight_tonemap "0"
cl_clearhinthistory // Clear memory of client side hints displayed to the player.
cl_clockdrift_max_ms "150" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
cl_clockdrift_max_ms_threadmode "0" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
cl_clock_correction "1" // Enable/disable clock correction on the client.
cl_clock_correction_adjustment_max_amount "200" // Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount
cl_clock_correction_adjustment_max_offset "90" // it moves towards apply
cl_clock_correction_adjustment_min_offset "10" // then no clock correction is applied.
cl_clock_correction_force_server_tick "999" // Force clock correction to match the server tick + this offset (-999 disables it).
cl_clock_showdebuginfo "0" // Show debugging info about the clock drift.
cl_cmdrate "100" // Max number of command packets sent to server per second
cl_colorblind "0" // Set to 1 for high contrast crosshairs. Set to 2 for specific color changes intended to help common types of color blindness.
cl_crash // Causes a client crash for testing
cl_create_server
cl_crosshair_alpha "255" // Crosshair alpha
cl_crosshair_blue "220" // Crosshair blue component
cl_crosshair_dynamic "1" // Crosshair scales based on accuracy
cl_crosshair_green "182" // Crosshair green component
cl_crosshair_red "138" // Crosshair red component
cl_crosshair_thickness "2" // Crosshair thickness in pixels
cl_demo_polish_print_time // Show the demo polish options dialog
cl_detail_avoid_force "0" // percentage of the width of the detail sprite )
cl_detail_avoid_radius "64" // radius around detail sprite to avoid players
cl_detail_avoid_recover_speed "0" // how fast to recover position after avoiding players
cl_detail_max_sway "5" // Amplitude of the detail prop sway
cl_detail_multiplier "1" // extra details to create
cl_disable_ragdolls "0"
cl_downloadfilter "0" // nosounds)
cl_drawhud "1" // Enable the rendering of the hud
cl_drawleaf "-1"
cl_drawmaterial "0" // Draw a particular material over the frame
cl_drawshadowtexture "0"
cl_dumpplayer // Dumps info about a player
cl_dumpsplithacks // Dump split screen workarounds.
cl_dump_particle_stats // dump particle profiling info to particle_profile.csv
cl_entityreport "0" // draw entity states to console
cl_ent_absbox // Displays the clients absbox for the entity under the crosshair.
cl_ent_bbox // Displays the clients bounding box for the entity under the crosshair.
cl_ent_rbox // Displays the clients render box for the entity under the crosshair.
cl_extrapolate "1" // Enable/disable extrapolation if interpolation history runs out.
cl_extrapolate_amount "0" // Set how many seconds the client will extrapolate entities for.
cl_fastdetailsprites "1" // whether to use new detail sprite system
cl_find_ent // Find and list all client entities with classnames that contain the specified substring. Format: cl_find_ent <substring>
cl_find_ent_index // Display data for clientside entity matching specified index. Format: cl_find_ent_index <index>
cl_flushentitypacket "0" // For debugging. Force the engine to flush an entity packet.
cl_forcepreload "0" // Whether we should force preloading.
cl_force_3rd_strike "0"
cl_fullupdate // Forces the server to send a full update packet
cl_glow_ability_b "0" // Color of ability glow
cl_glow_ability_colorblind_b "1" // Color of ability glow
cl_glow_ability_colorblind_g "1" // Color of ability glow
cl_glow_ability_colorblind_r "0" // Color of ability glow
cl_glow_ability_g "0" // Color of ability glow
cl_glow_ability_r "1" // Color of ability glow
cl_glow_blur_scale "3" // Controls the size of the halo shown around players and usable items
cl_glow_brightness "1" // Brightness of player halos
cl_glow_force "255" // Forces glows on
cl_glow_ghost_infected_b "1" // Color of infected ghost glow
cl_glow_ghost_infected_g "0" // Color of infected ghost glow
cl_glow_ghost_infected_r "0" // Color of infected ghost glow
cl_glow_infected_b "1" // Color of infected glow
cl_glow_infected_g "0" // Color of infected glow
cl_glow_infected_r "0" // Color of infected glow
cl_glow_infected_vomit_b "0" // Color the PZs see the IT victim glow
cl_glow_infected_vomit_g "0" // Color the PZs see the IT victim glow
cl_glow_infected_vomit_r "0" // Color the PZs see the IT victim glow
cl_glow_item_b "1"
cl_glow_item_far_b "1"
cl_glow_item_far_g "0"
cl_glow_item_far_r "0"
cl_glow_item_g "0"
cl_glow_item_r "0"
cl_glow_los_delay "0" // Time out of sight before a survivor friend shows up through a wall to a survivor.
cl_glow_los_fade_in_time "0" // Time after cl_glow_los_delay before a survivor friend shows up fully through wall.
cl_glow_los_fade_out_time "0" // Time after cl_glow_los_delay before a survivor friend goes away
cl_glow_noise "1" // Is Survivor glow seen by infected based on noise?
cl_glow_survivor_b "1" // Color of survivor team mate glow
cl_glow_survivor_g "0" // Color of survivor team mate glow
cl_glow_survivor_health_high_b "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_high_colorblind_b "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_high_colorblind_g "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_high_colorblind_r "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_high_g "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_high_r "0" // Color the Infected see Survivors when their health is high
cl_glow_survivor_health_low_b "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_low_colorblind_b "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_low_colorblind_g "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_low_colorblind_r "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_low_g "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_low_r "0" // Color the Infected see Survivors when their health is low
cl_glow_survivor_health_med_b "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_health_med_colorblind_b "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_health_med_colorblind_g "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_health_med_colorblind_r "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_health_med_g "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_health_med_r "0" // Color the Infected see Survivors when their health is medium
cl_glow_survivor_hurt_b "0" // Color of survivor team mate glow when incapacitated
cl_glow_survivor_hurt_g "0" // Color of survivor team mate glow when incapacitated
cl_glow_survivor_hurt_r "1" // Color of survivor team mate glow when incapacitated
cl_glow_survivor_r "0" // Color of survivor team mate glow
cl_glow_survivor_vomit_b "0" // Color the Survivors see the IT victim glow
cl_glow_survivor_vomit_g "0" // Color the Survivors see the IT victim glow
cl_glow_survivor_vomit_r "1" // Color the Survivors see the IT victim glow
cl_glow_thirdstrike_item_b "0"
cl_glow_thirdstrike_item_colorblind_b "1"
cl_glow_thirdstrike_item_colorblind_g "1"
cl_glow_thirdstrike_item_colorblind_r "0"
cl_glow_thirdstrike_item_g "0"
cl_glow_thirdstrike_item_r "1"
cl_hidemenu_spawnclass_boomer "5"
cl_hidemenu_spawnclass_boomer2 "0"
cl_hidemenu_spawnclass_hunter "5"
cl_hidemenu_spawnclass_hunter2 "0"
cl_hidemenu_spawnclass_smoker "5"
cl_hidemenu_spawnclass_smoker2 "0"
cl_hidemenu_spawnmode "5"
cl_hidemenu_spawnmode2 "0"
cl_idealpitchscale "0"
cl_ideal_spec_mode "5" // 6 = roaming)
cl_ignorepackets "0" // Force client to ignore packets (for debugging).
cl_ignore_vpk_assocation "0" // Do not ask to set vpk assocation
cl_interp "0" // Sets the interpolation amount (bounded on low side by server interp ratio settings).
cl_interp_ratio "2" // Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).
cl_jiggle_bone_debug "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_debug_pitch_constraints "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_debug_yaw_constraints "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_invert "0"
cl_lagcompensation "1" // Perform server side lag compensation of weapon firing events.
cl_language "0" // Language (from HKCUSoftwareValveSteamLanguage)
cl_leafsystemvis "0"
cl_leveloverview "0"
cl_leveloverviewmarker "0"
cl_logofile "0" // Spraypoint logo decal.
cl_maxrenderable_dist "3000" // Max distance from the camera at which things will be rendered
cl_menuduration "10" // Client menus will hide after this many seconds (-1 disables)
cl_mouseenable "1"
cl_mouselook "1" // 0 for keyboard look. Cannot be set while connected to a server.
cl_mouselook2 "1" // 0 for keyboard look. Cannot be set while connected to a server.
cl_observercrosshair "1"
cl_overdraw_test "0"
cl_panelanimation // Shows panel animation variables: <panelname | blank for all panels>.
cl_particles_dump_effects
cl_particles_show_bbox "0"
cl_particle_retire_cost "0"
cl_pclass "0" // Dump entity by prediction classname.
cl_pdump "-1" // Dump info about this entity to screen.
cl_perf_wizard_enable "1" // Enables a performance-tuning wizard
cl_phys_timescale "1" // Sets the scale of time for client-side physics (ragdolls)
cl_pitchdown "89"
cl_pitchup "89"
cl_playerspraydisable "0" // Disable player sprays.
cl_precacheinfo // Show precache info (client).
cl_predict "1" // Perform client side prediction.
cl_predictioncopy_describe // Describe datamap_t for entindex
cl_predictionlist "0" // Show which entities are predicting
cl_predictweapons "1" // Perform client side prediction of weapon effects.
cl_pred_track // for field fieldname.
cl_ragdoll_gravity "386" // Sets the gravity client-side ragdolls
cl_ragdoll_limit "20" // Maximum number of ragdolls to show (-1 disables limit)
cl_reloadpostprocessparams
cl_removedecals // Remove the decals from the entity under the crosshair.
cl_report_soundpatch // reports client-side sound patch count
cl_resend "6" // Delay in seconds before the client will resend the connect attempt
cl_shadowtextureoverlaysize "256"
cl_showanimstate "-1" // Show the (client) animation state for the specified entity (-1 for none).
cl_showanimstate_activities "1" // Show activities in the (client) animation state display.
cl_showents // Dump entity list to console.
cl_showevents "0" // Print event firing info in the console
cl_showfps "0" // 4 = Show FPS and Log to file )
cl_showhelp "1" // Set to 0 to not show on-screen help
cl_showpluginmessages "1" // Allow plugins to display messages to you
cl_showpos "0" // Draw current position at top of screen
cl_showposeparams "1"
cl_show_demo_polish_options_dlg // Show the demo polish options dialog
cl_show_path "1"
cl_skipfastpath "0" // Set to 1 to stop all models that go through the model fast path from rendering
cl_skipslowpath "0" // Set to 1 to skip any models that dont go through the model fast path
cl_smoke_color_percent "0"
cl_soundfile "0" // Jingle sound file.
cl_soundscape_flush // Flushes the client side soundscapes
cl_soundscape_printdebuginfo // print soundscapes
cl_sporeclipdistance "512"
cl_ss_origin // print origin in script format
cl_sun_decay_rate "0"
cl_timeout "30" // the client will disconnect itself
cl_updaterate "100" // Number of packets per second of updates you are requesting from the server
cl_updatevisibility // Updates visibility bits.
cl_upspeed "320"
cl_use_update_interval "0" // Time between use target updates
cl_view // Set the view entity index.
cl_viewtarget_debug "0"
cl_viewtarget_offset "0"
cl_viewtarget_player "0" // Lock 3rd person spec looking into targets eyes
cl_winddir "0" // Weather effects wind direction angle
cl_windspeed "0" // Weather effects wind speed scalar
cl_witch_light_brightness "5"
cl_witch_light_color_b "0"
cl_witch_light_color_g "0"
cl_witch_light_color_r "255"
cl_witch_light_cone "45"
cl_witch_light_debug "0"
cl_witch_light_enable "1"
cl_witch_light_offset_x "10"
cl_witch_light_offset_y "0"
cl_witch_light_offset_z "35"
cl_witch_light_offset_z_max "30"
cl_witch_light_radius "60"
cl_wpn_sway_scale "1"
cmd // Forward command to server.
cmd1 // sets userinfo string for split screen player in slot 1
cmd2 // sets userinfo string for split screen player in slot 2
cmd3 // sets userinfo string for split screen player in slot 3
cmd4 // sets userinfo string for split screen player in slot 4
collision_test // Tests collision system
colorcorrectionui // Show/hide the color correction tools UI.
commentary_cvarsnotchanging
commentary_finishnode
commentary_showmodelviewer // Display the commentary model viewer. Usage: commentary_showmodelviewer <model name> <optional attached model name>
condump // dump the text currently in the console to condumpXX.log
connect // Connect to specified server.
con_enable "1" // Allows the console to be activated.
crash // Cause the engine to crash (Debug!!)
CreatePredictionError // Create a prediction error
create_flashlight
crosshair "1"
cs_make_vip // Marks a player as the VIP
cs_ShowStateTransitions "-2" // cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.
current_flow_distance // Reports the flow distance for the local player
cvarlist // Show the list of convars/concommands.
c_maxdistance "200"
c_maxpitch "90"
c_maxyaw "135"
c_mindistance "30"
c_minpitch "0"
c_minyaw "-135"
c_orthoheight "100"
c_orthowidth "100"
c_thirdpersonshoulder "0"
c_thirdpersonshoulderaimdist "120"
c_thirdpersonshoulderdist "40"
c_thirdpersonshoulderheight "5"
c_thirdpersonshoulderoffset "20"
dbghist_addline // Add a line to the debug history. Format: <category id> <line>
dbghist_dump // Dump the debug history to the console. Format: <category id> Categories: 0: Entity I/O 1: AI Decisions 2: Sc
debugsystemui // Show/hide the debug system UI.
debug_visibility_monitor "0"
debug_zombie_panel "0" // -1 = Too Far 1 = Tank 2 = Someone else tank
default_fov "90"
demolist // Print demo sequence list.
demos // Demo demo file sequence.
demoui // Show/hide the demo player UI.
demoui2 // Show/hide the advanced demo player UI (demoui2).
demo_gototick // Skips to a tick in demo.
demo_pause // Pauses demo playback.
demo_polish_auto_polish "1" // When enabled will cause a recorded demo to be polished automatically on end record.
demo_polish_bone_test_index "-1" // Test bone index.
demo_recordcommands "1" // Record commands typed at console into .dem files.
demo_resume // Resumes demo playback.
demo_timescale // Sets demo replay speed.
demo_togglepause // Toggles demo playback.
devshots_nextmap // Used by the devshots system to go to the next map in the devshots maplist.
devshots_screenshot // use the screenshot command instead.
differences // Show all convars which are not at their default values.
director_ai_tanks "0"
director_build_up_min_interval "15"
director_convert_pills "1"
director_convert_pills_critical_health "50"
director_debug "0"
director_debug_scavenge_items "0"
director_debug_threat_placement "0"
director_finale_infinite "0" // Never bring in a rescue vehicle.
director_finale_item_cluster_count "3" // How many clusters of items will be populated in the finale
director_finale_max_loops "2" // Versus mode: Number of times to loop through the finale waves before rescue.
director_finale_mob_max_interval "45"
director_finale_mob_min_interval "5"
director_finale_mob_relax_interval "20" // How long a relax wave lasts during the finale
director_finale_stage_delay "5"
director_force_background "0" // Forces background map population logic for testing
director_force_panic_event // Forces a PanicEvent to occur
director_force_tank "0"
director_force_versus_start // so PZs can spawn even if survivors are still in the safe room
director_force_witch "0"
director_gas_can_density "6" // Items per 100 yards square
director_ingress_range "3000"
director_intensity_relax_allow_wanderers_threshold "0" // All survivors must be below this intensity during RELAX for wandering zombies to be spawned
director_intensity_relax_allow_wanderers_threshold_expert "0" // All survivors must be below this intensity during RELAX for wandering zombies to be spawned
director_intensity_relax_allow_wanderers_threshold_hard "0" // All survivors must be below this intensity during RELAX for wandering zombies to be spawned
director_intensity_relax_threshold "0" // All survivors must be below this intensity before a Peak is allowed to switch to Relax (in addition to the normal peak timer)
director_intensity_threshold "0"
director_item_cluster_range "50" // Scavenge items of the same kind that are this close to each other are considered a single cluster for population purposes
director_molotov_density "6" // Items per 100 yards square
director_must_create_all_scavenge_items "0"
director_no_bosses "0" // Disable boss spawns
director_no_death_check "0" // Disable survivor team death ending scenario
director_no_mobs "0" // Disable mob rushes
director_no_specials "0" // Disable PZ spawns
director_no_survivor_bots "0" // Disable filling out the survivor team with bots
director_oxygen_tank_density "6" // Items per 100 yards square
director_pain_pill_density "6" // Items per 100 yards square
director_panic_forever "0" // Panic events never end
director_pipe_bomb_density "6" // Items per 100 yards square
director_pistol_density "4" // Items per 100 yards square
director_print_player_counts // Prints out counts of connected players and transitioning players (for debugging)
director_propane_tank_density "6" // Items per 100 yards square
director_ready_duration "60" // survivor team has this amount of time to get ready before starting out
director_ready_radius "300" // The distance survivors can move from the starting weapons during the ready period
director_relax_max_flow_travel "3000"
director_relax_max_interval "45"
director_relax_min_interval "30"
director_report // Prints a snapshot of the directors state
director_scavenge_item_override "0" // Override map-specified item densities with cvar values for tuning
director_short_finale "0" // Short finale for testing escape vehicles
director_show_intensity "0"
director_special_battlefield_respawn_interval "10"
director_special_finale_offer_length "10" // How long is given to a player to accept the offer of a special zombie during the finale.
director_special_initial_spawn_delay_max "60"
director_special_initial_spawn_delay_max_extra "180"
director_special_initial_spawn_delay_min "30"
director_special_original_offer_length "30" // How long is given to the first player to accept the offer of a special zombie.
director_special_respawn_interval "45"
director_spectate_specials "0" // Allow spectating zombies
director_start // and bosses
director_stop // and bosses
director_sustain_peak_max_time "5"
director_sustain_peak_min_time "3"
director_tank_bypass_max_flow_travel "1500"
director_tank_checkpoint_interval "15" // Min time after leaving a checkpoint that a tank can spawn
director_tank_force_offer "0" // Forces the director to offer a tank
director_tank_lottery_entry_time "0" // Time it takes for entry into the tank lottery
director_tank_lottery_selection_time "4" // Time it takes for selection in the tank lottery
director_tank_max_interval "500"
director_tank_min_interval "350"
director_tank_offer_debug "0"
director_threat_clear_radius "500" // Prevent wandering zombies within this radius of threats
director_threat_max_separation "5000"
director_threat_min_separation "5000"
director_threat_radius "1000"
director_transition_timeout "60" // Duration (in seconds) to wait for survivors to transition across changelevels
director_unfreeze_time "20" // Duration (in seconds) to wait to unfreeze a team after the first player has connected
director_weapon_density "4" // Items per 100 yards square
disable_dynamic_prop_loading "0" // dynamic props wont be loaded
disable_static_prop_loading "0" // static props wont be loaded
disconnect // Disconnect game from server.
display_elapsedtime // Displays how much time has elapsed since the game started
display_game_events "0"
dlc3_finale_escape_horde_delay "10"
dlc3_finale_stage_delay "0"
dlight_debug // Creates a dlight in front of the player
drawcross // Draws a cross at the given location Arguments: x y z
drawline // Draws line between two 3D Points. Green if no collision Red is collides with something Arguments: x1 y1 z1 x2 y2 z2
dsp_dist_max "1440"
dsp_dist_min "0"
dsp_enhance_stereo "1"
dsp_off "0"
dsp_player "0"
dsp_reload
dsp_slow_cpu "0"
dsp_volume "0"
dti_flush // Write out the datatable instrumentation files (you must run with -dti for this to work).
dumpentityfactories // Lists all entity factory names.
dumpeventqueue // Dump the contents of the Entity I/O event queue to the console.
dumpgamestringtable // Dump the contents of the game string table to the console.
dumpsavedir // List the contents of the save directory in memory
dumpstringtables // Print string tables to console.
dump_avatar_info // Print out avatar info of each plaeyr
dump_entity_sizes // Print sizeof(entclass)
dump_globals // Dump all global entities/states
dump_player_reports // Dump all player reports to the console for debugging.
dump_pz_data // Dump PZ data
echo // Echo text to console.
editdemo // Edit a recorded demo file (.dem ).
editor_toggle // Disables the simulation and returns focus to the editor
enable_debug_overlays "1" // Enable rendering of debug overlays
enable_skeleton_draw "0" // Render skeletons in wireframe
endmovie // Stop recording movie frames.
endround // End the current round.
english "0" // running the english language set of assets.
ent_absbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
ent_attachments // Displays the attachment points on an entity. Arguments: {entity_name} / {class_name} / no argument picks what player is loo
ent_autoaim // Displays the entitys autoaim radius. Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
ent_bbox // Displays the movement bounding box for the given entity(ies) in orange. Some entites will also display entity specific overlay
ent_cancelpendingentfires // Cancels all ent_fire created outputs that are currently waiting for their delay to expire.
ent_create // Creates an entity of the given type where the player is looking.
ent_dump // Usage: ent_dump <entity name>
ent_fire // Usage: ent_fire <target> [action] [value] [delay]
ent_info // Usage: ent_info <class name>
ent_keyvalue // Applies the comma delimited key=value pairs to the entity with the given Hammer ID. Format: ent_keyvalue <entity id> <key1>=<v
ent_messages // Toggles input/output message display for the selected entity(ies). The name of the entity will be displayed as well as any mes
ent_messages_draw "0" // Visualizes all entity input/output activity.
ent_name
ent_orient // only orients target entitys YAW. Use the allangles opt
ent_pause // Toggles pausing of input/output message processing for entities. When turned on processing of all message will stop. Any mess
ent_pivot // Displays the pivot for the given entity(ies). (y=up=green, z=forward=blue, x=left=red). Arguments: {entity_name} / {class
ent_rbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
ent_remove // Removes the given entity(s) Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
ent_remove_all // Removes all entities of the specified type Arguments: {entity_name} / {class_name}
ent_rotate // Rotates an entity by a specified # of degrees
ent_setang // Set entity angles
ent_setname // Sets the targetname of the given entity(s) Arguments: {new entity name} {entity_name} / {class_name} / no argument picks wh
ent_setpos // Move entity to position
ent_show_response_criteria // an entitys current criteria set used to select responses. Arguments: {entity_name} / {class_name} /
ent_step // When ent_pause is set this will step through one waiting input / output message at a time.
ent_teleport // Teleport the specified entity to where the player is looking. Format: ent_teleport <entity name>
ent_text // Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text) Arguments: {entity_
ent_viewoffset // Displays the eye position for the given entity(ies) in red. Arguments: {entity_name} / {class_name} / no argument picks wha
envmap
escape // Escape key pressed.
exec // Execute script file.
exit // Exit the engine.
explode // Kills the player with explosive damage
explodevector // Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>
fadein // fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.
fadeout // fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.
fade_crosshair // Fades the prop being looked at
fade_immediately "0"
find // Find concommands with the specified string in their name/help text.
findflags // Find concommands by flags.
find_ent // Find and list all entities with classnames or targetnames that contain the specified substring. Format: find_ent <substring>
find_ent_index // Display data for entity matching specified index. Format: find_ent_index <index>
firetarget
firstperson // Switch to firstperson camera.
first_aid_heal_percent "0" // Percent of injuries to heal
first_aid_kit_max_heal "100"
first_aid_kit_range "100"
first_aid_kit_use_duration "5"
fish_debug "0" // Show debug info for fish
fish_dormant "0" // Turns off interactive fish behavior. Fish become immobile and unresponsive.
fix_versus_convars "1"
flush // Flush unlocked cache memory.
flush_locked // Flush unlocked and locked cache memory.
fly_add_keyframe
fly_clear_all_keyframes
fly_show_path
fly_start
fog_color "-1"
fog_colorskybox "-1"
fog_enable "1"
fog_enableskybox "1"
fog_enable_water_fog "1"
fog_end "-1"
fog_endskybox "-1"
fog_hdrcolorscale "-1"
fog_hdrcolorscaleskybox "-1"
fog_maxdensity "-1"
fog_maxdensityskybox "-1"
fog_override "0" // Overrides the maps fog settings (-1 populates fog_ vars with maps values)
fog_start "-1"
fog_startskybox "-1"
forcebind // Bind a command to an available key. (forcebind command opt:suggestedKey)
force_centerview
foundry_engine_get_mouse_control // Give the engine control of the mouse.
foundry_engine_release_mouse_control // Give the control of the mouse back to Hammer.
foundry_select_entity // Select the entity under the crosshair or select entities with the specified name.
foundry_sync_hammer_view // Move Hammers 3D view to the same position as the engines 3D view.
foundry_update_entity // Updates the entitys position/angles when in edit mode
fov_desired "90" // Sets the base field-of-view.
fov_desired2 "90" // Sets the base field-of-view.
fs_printopenfiles // Show all files currently opened by the engine.
fs_warning_level // Set the filesystem warning level.
fuel_barrel_damage_amount "25"
fuel_barrel_damage_radius "400"
fuel_barrel_debug "0"
fuel_barrel_flame_instances "8"
fuel_barrel_health "20"
fuel_barrel_screen_shake_amplitude "20"
fuel_barrel_screen_shake_duration "1"
fuel_barrel_screen_shake_frequency "2"
fuel_barrel_screen_shake_radius "1000"
func_break_max_pieces "15"
g15_dumpplayer // Spew player data.
g15_reload // Reloads the Logitech G-15 Keyboard configs.
g15_update_msec "250" // Logitech G-15 Keyboard update interval.
gameinstructor_dump_open_lessons // Gives a list of all currently open lessons.
gameinstructor_enable "1" // Display in game lessons that teach new players.
gameinstructor_reload_lessons // Shuts down all open lessons and reloads them from the script file.
gameinstructor_reset_counts // Resets all display and success counts to zero.
gameinstructor_verbose "0" // Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.
gameinstructor_verbose_lesson "0" // Display more verbose information for lessons have this name.
gameui_activate // Shows the game UI
gameui_allowescape // Escape key allowed to hide game UI
gameui_allowescapetoshow // Escape key allowed to show game UI
gameui_hide // Hides the game UI
gameui_preventescape // Escape key doesnt hide game UI
gameui_preventescapetoshow // Escape key doesnt show game UI
getpos // dump position and angles to the console
getpos_exact // dump origin and angles to the console
give // Give item to player. Arguments: <item_name>
givecurrentammo // Give a supply of ammo for current weapon..
global_set // 2 = DEAD).
gl_clear_randomcolor "0" // Clear the back buffer to random colors every frame. Helps spot open seams in geometry.
god "0" // Survivors dont take damage
go_away_from_keyboard // Go away from the keyboard so a bot will take over.
groundlist // Display ground entity list <index>
g_debug_angularsensor "0"
g_debug_constraint_sounds "0" // Enable debug printing about constraint sounds.
g_debug_physcannon "0"
g_debug_ragdoll_removal "0"
g_debug_ragdoll_visualize "0"
g_debug_vehiclebase "0"
g_debug_vehicleexit "0"
g_debug_vehiclesound "0"
hammer_update_entity // Updates the entitys position/angles when in edit mode
hammer_update_safe_entities // Updates entities in the map that can safely be updated (dont have parents or are affected by constraints). Also excludes entit
hap_BoomerScale "1"
hap_dangleScale "1"
hap_HasDevice "0" // falcon is connected
hap_HunterScale "1"
hap_melee_scale "0"
hap_noclip_avatar_scale "0"
hap_SmokerScale "1"
hap_tank_damage_scale "0"
hap_zombie_damage_scale "0"
heartbeat // Force heartbeat of master servers
help // Find help about a convar/concommand.
hideconsole // Hide the console.
hidehud "0" // 512
hidepanel // Hides a viewport panel <name>
hide_message_panel // Hides the message panel
holdout_boomer_limit_increase "0" // increase max boomers by this amount.
holdout_horde_stage_interval "60" // Seconds between horde attacks
holdout_horde_stage_interval_decay "2" // reduce the interval by this many seconds
holdout_hunter_limit_increase "1" // increase max hunters by this amount.
holdout_lull_time "15" // Lull duration between holdout waves.
holdout_lull_time_increment "15" // Increment for the lull time per wave.
holdout_lull_time_max "60" // Max lull duration.
holdout_max_boomers "2" // Max boomers alive at one time.
holdout_max_hunters "3" // Max hunters alive at one time.
holdout_max_smokers "4" // Max smokers alive at one time.
holdout_max_specials "9" // Max number of special zombies alive at one time.
holdout_round_restart_delay "15" // restart the round after this many seconds.
holdout_smoker_limit_increase "1" // increase max smokers by this amount.
holdout_special_spawn_interval "20" // Seconds between special spawn waves
holdout_special_spawn_interval_decay "1" // reduce the spawn interval by this many seconds
holdout_special_stage_interval "40" // increase the limit for each special type
holdout_tank_double_spawn_delay "10" // Delay between the two tanks during double spawns.
holdout_tank_stage_interval "80" // Seconds between tank attacks
holdout_tank_stage_interval_decay "20" // reduce the interval by this many seconds
hostfile "0" // The HOST file to load.
hostip "167772176.000" // Host game server ip
hostname "0" // Hostname for server.
hostport "27015" // Host game server port
host_flush_threshold "12" // Memory threshold below which the host should flush caches between server instances
host_map "0" // Current map name.
host_runofftime // Run off some time without rendering/updating sounds
host_sleep "0" // Force the host to sleep a certain number of milliseconds each frame.
host_timescale "1" // Prescale the clock by this amount.
host_writeconfig // Store current settings to config.cfg (or specified .cfg file).
host_writeconfig_ss // Store current settings to config.cfg (or specified .cfg file) with first param as splitscreen index.
hud_classautokill "1" // Automatically kill player after choosing a new playerclass.
hud_reloadscheme // Reloads hud layout and animation scripts.
hud_takesshots "0" // Auto-save a scoreboard screenshot at the end of a map.
hud_targetid_rangefinder "0" // shows range for different masks
hud_zombieteam "1" // Show infected team status on the HUD
hud_zombieteam_showself "0" // Show your own status in the zombie team display
hunter_committed_attack_range "75"
hunter_leap_away_give_up_range "1000"
hunter_pounce_air_speed "700"
hunter_pounce_loft_rate "0" // Hunter adds this angle/distance when pouncing
hunter_pounce_max_loft_angle "45" // Maximum loft angle for Hunter Pounce angle adjustment
hunter_pounce_ready_range "500" // crouch and get ready
hunter_pz_claw_dmg "6" // Amount of damage done by a PZ hunters regular melee attack
hurtme // Hurts the player. Arguments: <health to lose>
impulse
incrementvar // Increment specified convar value.
inferno_child_spawn_interval_multiplier "1" // Amount spawn interval increases for each child
inferno_child_spawn_max_depth "4"
inferno_damage "40" // Damage per second
inferno_debug "0"
inferno_dlight_spacing "200" // Inferno dlights are at least this far apart
inferno_flame_lifetime "15" // Average lifetime of each flame in seconds
inferno_flame_spacing "50" // Minimum distance between separate flame spawns
inferno_friendly_fire_duration "6" // FF is credited back to the thrower.
inferno_initial_spawn_interval "0" // Time between spawning flames for first fire
inferno_max_child_spawn_interval "1" // Largest time interval for child flame spawning
inferno_max_flames "32" // Maximum number of flames that can be created
inferno_max_range "500" // Maximum distance flames can spread from their initial ignition point
inferno_particles "0"
inferno_per_flame_spawn_duration "5" // Duration each new flame will attempt to spawn new flames
inferno_scorch_decals "0"
inferno_spawn_angle "45" // Angular change from parent
inferno_surface_offset "20"
inferno_velocity_decay_factor "0"
inferno_velocity_factor "0"
inferno_velocity_normal_factor "0"
intensity_averaged_following_decay "20" // Seconds for the time averaged intensity to meet the baseline intensity
intensity_decay_time "30" // Seconds to decay full intensity to zero
intensity_enemy_death_far_range "500"
intensity_enemy_death_near_range "150"
intensity_factor "0" // How quickly intensity increases
intensity_lock "-1" // Lock players intensities at this value
invnext
invprev
in_forceuser "0" // Force user input to this split screen player.
ip "0" // Overrides IP for multihomed hosts
jal_quick_entry // Debug entry point
joyadvancedupdate
joystick "0"
joy_accelmax "1"
joy_accelscale "0"
joy_advanced "0"
joy_advaxisr "0"
joy_advaxisu "0"
joy_advaxisv "0"
joy_advaxisx "0"
joy_advaxisy "0"
joy_advaxisz "0"
joy_autoaimdampen "0" // How much to scale user stick input when the gun is pointing at a valid target.
joy_autoaimdampenrange "0" // The stick range where autoaim dampening is applied. 0 = off
joy_axisbutton_threshold "0" // Analog axis range before a button press is registered.
joy_circle_correct "1"
joy_diagonalpov "0" // too.
joy_display_input "0"
joy_forwardsensitivity "-1"
joy_forwardthreshold "0"
joy_inverty "0" // Whether to invert the Y axis of the joystick for looking.
joy_inverty2 "0" // Whether to invert the Y axis of the joystick for looking.
joy_lowend "1"
joy_lowmap "1"
joy_movement_stick "0" // Which stick controls movement (0 is left stick)
joy_movement_stick2 "0" // Which stick controls movement (0 is left stick)
joy_name "0"
joy_pitchsensitivity "1"
joy_pitchsensitivity2 "1"
joy_pitchthreshold "0"
joy_response_look "0" // 1=Acceleration Promotion
joy_response_move "1" // 1/sensitivity
joy_sensitive_step0 "0"
joy_sensitive_step1 "0"
joy_sensitive_step2 "0"
joy_sidesensitivity "1"
joy_sidethreshold "0"
joy_wingmanwarrior_centerhack "0" // Wingman warrior centering hack.
joy_wingmanwarrior_turnhack "0" // Wingman warrior hack related to turn axes.
joy_yawsensitivity "-1"
joy_yawsensitivity2 "-1"
joy_yawthreshold "0"
jpeg // Take a jpeg screenshot: jpeg <filename> <quality 1-100>.
kdtree_test // Tests spatial partition for entities queries.
key_findbinding // Find key bound to specified command string.
key_listboundkeys // List bound keys with bindings.
key_updatelayout // Updates game keyboard layout to current windows keyboard setting.
kick // Kick a player by name.
kickid // with a message.
kick_transitioning // Kick a transitioning player by userID
kill // Kills the player with generic damage
killserver // Shutdown the server.
killvector // Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>
lastinv
leaderboard_duplicate_entries "1"
left_4_dead_radio "0"
lightcache_maxmiss "2"
lightprobe // Samples the lighting environment. Creates a cubemap and a file indicating the local lighting in a subdirectory called material
light_crosshair // Show texture color at crosshair
linefile // Parses map leak data from .lin file
listdemo // List demo file contents.
listid // Lists banned users.
listip // List IP addresses on the ban list.
listissues // List all the issues that can be voted on.
listmodels // List loaded models.
listRecentNPCSpeech // Displays a list of the last 5 lines of speech from NPCs.
load // Load a saved game.
loadcommentary
loader_dump_table
log // and udp < on | off >.
logaddress_add // Set address and port for remote host <ip:port>.
logaddress_del // Remove address and port for remote host <ip:port>.
logaddress_delall // Remove all udp addresses being logged to
logaddress_list // List all addresses currently being used by logaddress.
lookspring "0"
lookstrafe "0"
lower_body_debug "0"
map // Start playing on specified map.
maps // Displays list of maps.
map_background // Runs a map as the background to the main menu.
map_commentary // on a specified map.
map_edit
map_showspawnpoints // Shows player spawn points (red=invalid)
mark // Set attribute of selected area.
mat_accelerate_adjust_exposure_down "3"
mat_bloomamount_rate "0"
mat_bloom_scalefactor_scalar "1"
mat_bumpbasis "0"
mat_camerarendertargetoverlaysize "128"
mat_colcorrection_forceentitiesclientside "0" // Forces color correction entities to be updated on the client
mat_configcurrent // show the current video control panel config for the material system
mat_crosshair // Display the name of the material under the crosshair
mat_crosshair_edit // open the material under the crosshair in the editor defined by mat_crosshair_edit_editor
mat_crosshair_explorer // open the material under the crosshair in explorer and highlight the vmt file
mat_crosshair_printmaterial // print the material under the crosshair
mat_crosshair_reloadmaterial // reload the material under the crosshair
mat_debug // Activates debugging spew for a specific material.
mat_debugalttab "0"
mat_debug_bloom "0"
mat_drawflat "0"
mat_drawwater "1"
mat_dynamiclightmaps "0"
mat_dynamic_tonemapping "1"
mat_edit // Bring up the material under the crosshair in the editor
mat_exposure_center_region_x "0"
mat_exposure_center_region_y "0"
mat_fastclip "0"
mat_fastnobump "0"
mat_fillrate "0"
mat_forcedynamic "0"
mat_force_bloom "0"
mat_force_tonemap_scale "0"
mat_frame_sync_enable "1"
mat_frame_sync_force_texture "0" // Force frame syncing to lock a managed texture.
mat_fullbright "0"
mat_grain_scale_override "1"
mat_hdr_enabled // Report if HDR is enabled for debugging
mat_hdr_tonemapscale "1" // 16 = eyes wide open.
mat_hdr_uncapexposure "0"
mat_hsv "0"
mat_info // Shows material system info
mat_leafvis "0" // Draw wireframe of current leaf
mat_loadtextures "1"
mat_lpreview_mode "-1"
mat_luxels "0"
mat_measurefillrate "0"
mat_monitorgamma_tv_enabled "0"
mat_morphstats "0"
mat_norendering "0"
mat_normalmaps "0"
mat_normals "0"
mat_postprocess_enable "1"
mat_proxy "0"
mat_queue_priority "1"
mat_reloadallmaterials // Reloads all materials
mat_reloadmaterial // Reloads a single material
mat_reloadtextures // Reloads all textures
mat_remoteshadercompile "0"
mat_reporthwmorphmemory // Reports the amount of size in bytes taken up by hardware morph textures.
mat_reversedepth "0"
mat_savechanges // saves current video configuration to the registry
mat_setvideomode // windowed state of the material system
mat_shadercount // display count of all shaders and reset that count
mat_showcamerarendertarget "0"
mat_showframebuffertexture "0"
mat_showlowresimage "0"
mat_showmaterials // Show materials.
mat_showmaterialsverbose // Show materials (verbose version).
mat_showtextures // Show used textures.
mat_showwatertextures "0"
mat_show_texture_memory_usage "0" // Display the texture memory usage on the HUD.
mat_softwareskin "0"
mat_spewalloc "0"
mat_spewvertexandpixelshaders // Print all vertex and pixel shaders currently loaded to the console
mat_stub "0"
mat_suppress // Supress a material from drawing
mat_surfaceid "0"
mat_surfacemat "0"
mat_texture_list_content_path "0" // itll assume your content directory is next to the currently runn
mat_texture_list_exclude // save - saves exclude list file
mat_texture_list_txlod // -1 to dec resolution
mat_texture_list_txlod_sync // save - saves all changes to material content files
mat_tonemap_algorithm "1" // 0 = Original Algorithm 1 = New Algorithm
mat_tonemap_min_avglum "3"
mat_tonemap_percent_bright_pixels "1"
mat_tonemap_percent_target "45"
mat_viewportscale "1" // Scale down the main viewport (to reduce GPU impact on CPU profiling)
mat_wireframe "0"
mat_yuv "0"
maxplayers // Change the maximum number of players allowed on this server.
memory // Print memory stats.
memory_diff // show memory stats relative to snapshot
memory_list // dump memory list (linux only)
memory_mark // snapshot current allocation status
memory_status // show memory stats (linux only)
mem_compact
mem_dump // Dump memory stats to text file.
mem_dumpvballocs // Dump VB memory allocation stats.
mem_incremental_compact
mem_incremental_compact_rate "0" // Rate at which to attempt internal heap compation
mem_test
mem_vcollide // Dumps the memory used by vcollides
menuselect // menuselect
minisave // Saves game (for current level only!)
mission_reload // Reload mission metadata
mix_dynamic_cull_max_CI_emitters "0"
mix_dynamic_debug_CI "0"
mix_dynamic_max_CI_emitters "30"
mix_dynamic_num_attack_vox_CI "2"
mm_datacenter_debugprint // Shows information retrieved from data center
mm_debugprint // Show debug information about current matchmaking session
mm_dedicated_force_servers "0" // Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers
mm_dedicated_search_maxping "150" // Longest preferred ping to dedicated servers for games
motdfile "0" // The MOTD file to load.
motd_enabled "1" // Toggles whether or not to show the MOTD to clients when they connect.
motd_intros "15"
mounted_gun_cooldown_time "20" // Mounted gun cooldown time
mounted_gun_damage "50"
mounted_gun_distance "36"
mounted_gun_fire_think_interval "0"
mounted_gun_mount_cooldown_time "0"
mounted_gun_overheat_penalty_time "20"
mounted_gun_overheat_time "20" // Mounted gun overheat time
mounted_gun_rate_of_fire "8"
movie_fixwave // etc.
mp_disable_autokick // Prevents a userid from being auto-kicked
mp_forcerespawnplayers // Force all players to respawn.
mp_forcewin // Forces team to win
mp_gamemode "0" // eg: map mapname versus
mp_roundlimit "3" // Maximum number of rounds
mp_scrambleteams // Scramble the teams and restart the game
mp_switchteams // Switch teams and restart the game
multiplayerendgame // Take all of the connected clients and take them to the end game state.
multvar // Multiply specified convar value.
music_calm_min_interval "45" // Minimum time between DisturbingAtmosphere performances
music_dynamic_action_decay "10"
music_dynamic_ambient_decay "7"
music_dynamic_ambient_in_max "0"
music_dynamic_ambient_in_min "0"
music_dynamic_ambient_out_max "1"
music_dynamic_ambient_out_min "0"
music_dynamic_ambient_vol_min_alert "0"
music_dynamic_asg_speed "1"
music_dynamic_attack_CI_close_decay "0"
music_dynamic_attack_CI_close_distmax "600"
music_dynamic_attack_CI_distmax "2400"
music_dynamic_attack_CI_near_decay "0"
music_dynamic_attack_CI_near_distmax "300"
music_dynamic_attack_CI_num "30"
music_dynamic_attack_CI_veryclose_decay "0"
music_dynamic_attack_CI_veryclose_distmax "94"
music_dynamic_boomer_interval_beats "5"
music_dynamic_calm_decay "15"
music_dynamic_CI_sight_decay "8"
music_dynamic_damage_decay "10"
music_dynamic_damage_duck_damage_max "1"
music_dynamic_damage_duck_damage_min "0"
music_dynamic_damage_duck_max "0"
music_dynamic_damage_duck_min "0"
music_dynamic_damage_increment "0"
music_dynamic_debug "0" // Draw parameter meters
music_dynamic_dodamage_decay "4"
music_dynamic_dodamage_increment "0"
music_dynamic_gunfireslow_decay "3"
music_dynamic_gunfireslow_increment "0"
music_dynamic_gunfire_decay "1"
music_dynamic_gunfire_increment "0"
music_dynamic_hunter_interval_beats "5"
music_dynamic_huntrifle_speed "3"
music_dynamic_melee_speed "2"
music_dynamic_mgun_speed "0"
music_dynamic_mobstop_size "8" // When a mob gets to this size we think about stopping the music
music_dynamic_mob_action_close_max "0"
music_dynamic_mob_action_close_min "0"
music_dynamic_mob_action_decay "15"
music_dynamic_mob_action_increment "0"
music_dynamic_mob_action_max "1"
music_dynamic_mob_action_min "0"
music_dynamic_mob_choir_BPM "90"
music_dynamic_mob_choir_interval_beats "16"
music_dynamic_mob_choir_interval_randmultmax "3"
music_dynamic_mob_damage_max "1"
music_dynamic_mob_damage_min "0"
music_dynamic_mob_decay "15"
music_dynamic_mob_increment "0"
music_dynamic_mob_large "49" // Spawning a large mob
music_dynamic_mob_max "1"
music_dynamic_mob_med "29" // Spawning a med mob
music_dynamic_mob_min "0"
music_dynamic_mob_size "25" // Spawning a mob this large can play music
music_dynamic_mob_small "20" // Spawning a small mob
music_dynamic_on "1"
music_dynamic_pistol_speed "0"
music_dynamic_play
music_dynamic_psg_speed "2"
music_dynamic_PZ_BPM "80"
music_dynamic_PZ_interval_randmultmax "5"
music_dynamic_rifle_speed "0"
music_dynamic_scanmobstop_size "3" // music stops
music_dynamic_SI_close_distmax "1200"
music_dynamic_SI_far_distmin "1800"
music_dynamic_SI_inrange_distmax "2400"
music_dynamic_smg_speed "0"
music_dynamic_smoker_interval_beats "5"
music_dynamic_solosuccess_damagemin "0"
music_dynamic_solosuccess_decay "4"
music_dynamic_solosuccess_increment "1"
music_dynamic_stop_playing
music_dynamic_threat_decay "6"
music_dynamic_update_interval "0" // interval between music status/action update
music_dynamic_witch_alert_interval "37"
music_dynamic_witch_near_max "1800"
music_dynamic_witch_near_min "360"
music_intensity_override "-1" // Overrides the players music intensity track for testing
music_intensity_threshold "0"
music_large_area_reveal_repeat_threshold "60" // The minimum time in seconds between performances of this music
music_large_area_reveal_threshold "500000" // How much new area must be revealed to trigger the reveal music
music_manager "1" // Using the new music manager system.
music_master_debug "0"
music_master_tag_threshold "0"
music_min_pending_threat_time "10" // Minimum time until the next mob or boss. Used when deciding to play MomentOfSilence
music_min_safe_time "3" // Minimum time that we havent seen a threat or been injured. Used when deciding to play MomentOfSilence
music_moment_of_silence_repeat_interval "600" // Minimum time between successive MomentOfSilence performances
music_moment_of_silence_start_delay "60" // Minimum time before we can play a MomentOfSilence after leaving a Checkpoint
music_print // client
muzzleflash_light "1"
m_customaccel "0" // 2 enable with separate yaw/pitch rescale). Formula: mousesensitivity = ( raw
m_customaccel_exponent "1" // Mouse move is raised to this power before being scaled by scale factor.
m_customaccel_max "0" // 0 for no limit
m_customaccel_scale "0" // Custom mouse acceleration value.
m_filter "0" // Mouse filtering (set this to 1 to average the mouse over 2 frames).
m_filter2 "0" // Mouse filtering (set this to 1 to average the mouse over 2 frames).
m_forward "1" // Mouse forward factor.
m_mouseaccel1 "0" // Windows mouse acceleration initial threshold (2x movement).
m_mouseaccel2 "0" // Windows mouse acceleration secondary threshold (4x movement).
m_mousespeed "1" // Windows mouse speed factor (range 1 to 20).
m_pitch "0" // Mouse pitch factor.
m_pitch2 "0" // Mouse pitch factor.
m_side "0" // Mouse side factor.
m_yaw "0" // Mouse yaw factor.
name "0" // Current user name
name2 "0" // Current user name
nav_add_to_selected_set // Add current area to the selected set.
nav_add_to_selected_set_by_id // Add specified area id to the selected set.
nav_analyze // Re-analyze the current Navigation Mesh and save it to disk.
nav_area_bgcolor "0" // RGBA color to draw as the background color for nav areas while editing.
nav_area_max_size "50" // Max area size created in nav generation
nav_avoid // Toggles the avoid this area when possible flag used by the AI system.
nav_begin_area // drag the opposite corner to the desired location and
nav_begin_selecting // Start continuously adding to the selected set.
nav_begin_shift_xy // Begin shifting the Selected Set.
nav_build_ladder // Attempts to build a nav ladder on the climbable surface under the cursor.
nav_check_file_consistency // Scans the maps directory and reports any missing/out-of-date navigation files.
nav_check_floor // Updates the blocked/unblocked status for every nav area.
nav_check_stairs // Update the nav mesh STAIRS attribute
nav_chop_selected // Chops all selected areas into their component 1x1 areas
nav_clear_attribute // Remove given nav attribute from all areas in the selected set.
nav_clear_selected_set // Clear the selected set.
nav_clear_walkable_marks // Erase any previously placed walkable positions.
nav_compress_id // Re-orders area and ladder IDs so they are continuous.
nav_connect // then invoke the connect command. Note that this creates a
nav_coplanar_slope_limit "0"
nav_coplanar_slope_limit_displacement "0"
nav_corner_adjust_adjacent "18" // radius used to raise/lower corners in nearby areas when raising/lowering corners.
nav_corner_lower // Lower the selected corner of the currently marked Area.
nav_corner_place_on_ground // Places the selected corner of the currently marked Area on the ground.
nav_corner_raise // Raise the selected corner of the currently marked Area.
nav_corner_select // Select a corner of the currently marked Area. Use multiple times to access all four corners.
nav_create_area_at_feet "0" // Anchor nav_begin_area Z to editing players feet
nav_create_place_on_ground "0" // nav areas will be placed flush with the ground when created by hand.
nav_crouch // Toggles the must crouch in this area flag used by the AI system.
nav_debug_blocked "0"
nav_debug_finale_area "0" // Show extents of finale area and selected finale center
nav_delete // Deletes the currently highlighted Area.
nav_delete_marked // Deletes the currently marked Area (if any).
nav_disconnect // then invoke the disconnect command. This will remove all connec
nav_displacement_test "10000" // Checks for nodes embedded in displacements (useful for in-development maps)
nav_dont_hide // Toggles the area is not suitable for hiding spots flag used by the AI system.
nav_draw_limit "500" // The maximum number of areas to draw in edit mode
nav_edit "0" // Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.
nav_end_area // Defines the second corner of a new Area or Ladder and creates it.
nav_end_selecting // Stop continuously adding to the selected set.
nav_end_shift_xy // Finish shifting the Selected Set.
nav_flood_select // use this command again.
nav_fog_edit "0"
nav_fog_mark // Sets fog value for selected areas.
nav_fog_pick // Sets fog value for selected areas.
nav_fog_print_used // Prints out the list of fog names used in the map.
nav_fog_replace // Replaces the first fog name with the second in the map.
nav_fog_select_place // Selects all areas with the given fog place.
nav_fog_set // the current Fog is set.
nav_generate // Generate a Navigation Mesh for the current map and save it to disk.
nav_generate_fencetops "1" // Autogenerate nav areas on fence and obstacle tops
nav_generate_fixup_jump_areas "1" // Convert obsolete jump areas into 2-way connections
nav_generate_incremental // Generate a Navigation Mesh for the current map and save it to disk.
nav_generate_incremental_range "2000"
nav_gen_cliffs_approx // post-processing approximation
nav_gui // Opens the nav editing GUI
nav_gui_rebuild "0" // Rebuilds the nav ui windows from scratch every time theyre opened
nav_jump // Toggles the traverse this area by jumping flag used by the AI system.
nav_ladder_flip // Flips the selected ladders direction.
nav_load // Loads the Navigation Mesh for the current map.
nav_make_sniper_spots // Chops the marked area into disconnected sub-areas suitable for sniper spots.
nav_mark // Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.
nav_mark_attribute // Set nav attribute for all areas in the selected set.
nav_mark_unnamed // Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting.
nav_mark_walkable // Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate
nav_max_view_distance "0" // Maximum range for precomputed nav mesh visibility (0 = no limit)
nav_max_vis_delta_list_length "64"
nav_merge // and invoke the merge comm
nav_merge_mesh // Merges a saved selected set into the current mesh.
nav_no_hostages // Toggles the hostages cannot use this area flag used by the AI system.
nav_no_jump // Toggles the dont jump in this area flag used by the AI system.
nav_obscure_range "400"
nav_place_floodfill // and flood-fills the Place to all adjacent Areas. Flood-filli
nav_place_list // Lists all place names used in the map.
nav_place_pick // Sets the current Place to the Place of the Area under the cursor.
nav_place_replace // Replaces all instances of the first place with the second place.
nav_place_set // Sets the Place of all selected areas to the current Place.
nav_potentially_visible_dot_tolerance "0"
nav_precise // Toggles the dont avoid obstacles flag used by the AI system.
nav_print_visibility_info // Dumps some visibility-related data to the console.
nav_quicksave "1" // Set to one to skip the time consuming phases of the analysis. Useful for data collection and testing.
nav_recall_selected_set // Re-selects the stored selected set.
nav_recompute_flow // Recomputes flow distance
nav_remove_from_selected_set // Remove current area from the selected set.
nav_remove_jump_areas // replacing them with connections.
nav_run // Toggles the traverse this area by running flag used by the AI system.
nav_save // Saves the current Navigation Mesh to disk.
nav_save_selected // Writes the selected set to disk for merging into another mesh via nav_merge_mesh.
nav_selected_set_border_color "100" // Color used to draw the selected set borders while editing.
nav_selected_set_color "255" // Color used to draw the selected set background while editing.
nav_select_blocked_areas // Adds all blocked areas to the selected set
nav_select_completely_visible // Selects all areas completely visible to the selected area.
nav_select_damaging_areas // Adds all damaging areas to the selected set
nav_select_half_space // Selects any areas that intersect the given half-space.
nav_select_invalid_areas // Adds all invalid areas to the Selected Set.
nav_select_obstructed_areas // Adds all obstructed areas to the selected set
nav_select_overlapping // Selects nav areas that are overlapping others.
nav_select_partially_visible // Selects all areas at least partially visible to the selected area.
nav_select_radius // Adds all areas in a radius to the selection set
nav_select_stairs // Adds all stairway areas to the selected set
nav_select_threat // Selects all threat areas
nav_select_view_distance // Selects all areas within nav_max_view_distance.
nav_select_visible_set_size // Selects all areas with visible sets this size or greater.
nav_set_place_mode // Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names.
nav_shift // Shifts the selected areas by the specified amount
nav_show_approach_points "0" // Show Approach Points in the Navigation Mesh.
nav_show_area_info "0" // Duration in seconds to show nav area ID and attributes while editing
nav_show_compass "0"
nav_show_danger "0" // Show current danger levels.
nav_show_ladder_bounds // Draws the bounding boxes of all func_ladders in the map.
nav_show_light_intensity "0"
nav_show_nodes "0"
nav_show_node_grid "0"
nav_show_node_id "0"
nav_show_player_area "0" // Draws the last known area for the given entindex
nav_show_player_counts "0" // Show current player counts in each area.
nav_simplify_selected // Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas
nav_slope_limit "0" // The ground unit normals Z component must be greater than this for nav areas to be generated.
nav_slope_tolerance "0" // The ground unit normals Z component must be this close to the nav areas Z component to be generated.
nav_snap_to_grid "0" // Snap to the nav generation grid when creating new nav areas
nav_solid_props "0" // Make props solid to nav generation/editing
nav_splice // connected area between them.
nav_split // align the split line using your cursor and invoke the split command.
nav_split_place_on_ground "0" // nav areas will be placed flush with the ground when split.
nav_stand // Toggles the stand while hiding flag used by the AI system.
nav_stop // Toggles the must stop when entering this area flag used by the AI system.
nav_store_selected_set // Stores the current selected set for later retrieval.
nav_strip // and Encounter Spots from the current Area.
nav_subdivide // Subdivides all selected areas.
nav_test_node "0"
nav_test_node_crouch "0"
nav_test_node_crouch_dir "4"
nav_test_stairs // Test the selected set for being on stairs
nav_test_visibility // Tests visibility from the selected area to the one under the cursor.
nav_toggle_in_selected_set // Remove current area from the selected set.
nav_toggle_place_mode // Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names.
nav_toggle_place_painting // pointing at an Area will paint it with the current Place.
nav_toggle_selected_set // Toggles all areas into/out of the selected set.
nav_toggle_selecting // Start or stop continuously adding to the selected set.
nav_transient // Toggles the area is transient and may become blocked flag used by the AI system.
nav_trouble_report // Selects areas that may be breaking the map checklist for inspection
nav_trouble_report_corner_to_corner // Selects areas that can break game mechanics
nav_trouble_report_invalid // Selects areas that can break game mechanics
nav_trouble_report_suggestions // only if any area has a population
nav_trouble_test_area "0" // tests will be run against this areaID only
nav_trouble_test_debug_duration "10"
nav_trouble_walkable_backtrace "0"
nav_unmark // Clears the marked Area or Ladder.
nav_update_blocked // Updates the blocked/unblocked status for every nav area.
nav_update_lighting // Recomputes lighting values
nav_update_visibility_on_edit "0" // If nonzero editing the mesh will incrementally recompue visibility
nav_use_place // the current Place is set.
nav_walk // Toggles the traverse this area by walking flag used by the AI system.
nav_warp_to_mark // Warps the player to the marked area.
nav_world_center // Centers the nav mesh in the world
nb_acceleration "500"
nb_allow_avoiding "1"
nb_allow_climbing "1"
nb_allow_gap_jumping "1"
nb_blind "0" // Disable vision
nb_chase_lead_time "2"
nb_debug // ERRORS.
nb_debug_climbing "0"
nb_debug_filter // Add items to the NextBot debug filter. Items can be entindexes or part of the indentifier of one or more bots.
nb_debug_history "1" // each bot keeps a history of debug output in memory
nb_delete_all // Delete all non-player NextBot entities.
nb_dump_debug_history // Dumps debug history for the bot under the cursor to the blackbox
nb_force_look_at // Force selected bot to look at the local players position
nb_friction_forward "0"
nb_friction_sideways "3"
nb_goal_look_ahead_range "50"
nb_gravity "1000"
nb_head_aim_settle_duration "0"
nb_head_aim_steady_max_rate "100"
nb_ladder_align_range "50"
nb_lean_forward_accel "100"
nb_lean_max_angle "30"
nb_lean_rate "3"
nb_move_to_cursor // Tell all NextBots to move to the cursor position
nb_path_draw_inc "100"
nb_path_segment_influence_radius "100"
nb_player_crouch "0" // Force bots to crouch
nb_player_move "1" // Prevents bots from moving
nb_player_stop "0" // Stop all NextBotPlayers from updating
nb_player_walk "0" // Force bots to walk
nb_rush // Causes all infected to rush the survivors.
nb_saccade_speed "1000"
nb_saccade_time "0"
nb_select // Select the bot you are aiming at for further debug operations.
nb_speed_look_ahead_range "150"
nb_stop "0" // Stop all NextBots
nb_update_debug "0"
nb_update_framelimit "15"
nb_update_frequency "0"
nb_update_maxslide "2"
nb_vision_ignore_survivors "0"
nb_vision_notice_hidden_range "50"
nb_warp_selected_here // Teleport the selected bot to your cursor position
nb_yaw_rate "250"
net_allow_multicast "1"
net_blockmsg "0" // Discards incoming message: <0|1|name>
net_channels // Shows net channel info
net_droppackets "0" // Drops next n packets on client
net_dumpeventstats // Dumps out a report of game event network usage
net_fakejitter "0" // Jitter fakelag packet time
net_fakelag "0" // Lag all incoming network data (including loopback) by this many milliseconds.
net_fakeloss "0" // Simulate packet loss as a percentage (negative means drop 1/n packets)
net_graph "0" // = 3 draws payload legend.
net_graphheight "64" // Height of netgraph panel
net_graphmsecs "400" // The latency graph represents this many milliseconds.
net_graphpos "1"
net_graphproportionalfont "1" // Determines whether netgraph font is proportional or not
net_graphshowinterp "1" // Draw the interpolation graph.
net_graphshowlatency "1" // Draw the ping/packet loss graph.
net_graphsolid "1"
net_graphtext "1" // Draw text fields
net_maxroutable "1200" // Requested max packet size before packets are split.
net_public_adr "0" // this is the public facing ip address string: (x.x.x.x
net_scale "5"
net_showreliablesounds "0"
net_showsplits "0" // Show info about packet splits
net_showudp "0" // Dump UDP packets summary to console
net_showudp_remoteonly "0" // Dump non-loopback udp only
net_showusermessages "0"
net_splitpacket_maxrate "15000" // Max bytes per second when queueing splitpacket chunks
net_splitrate "1" // Number of fragments for a splitpacket that can be sent per frame
net_start // Inits multiplayer network sockets
net_status // Shows current network status
net_steamcnx_allowrelay "0" // Allow steam connections to attempt to use relay servers as fallback (best if specified on command line: +net_steamcnx_allowrel
net_steamcnx_enabled "1" // 2 forces use of steam connections instead of raw UDP.
net_steamcnx_status // Print status of steam connection sockets.
next "0" // Set to 1 to advance to next frame ( when singlestep == 1 )
nextdemo // Play next demo in sequence.
next_weapon_timer "1"
noclip // Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable
noclip_fixup "1"
notarget // Toggle. Player becomes hidden to NPCs.
npc_height_adjust "1" // Enable test mode for ik height adjustment
openserverbrowser // Opens server browser
overview_alpha "1" // Overview map translucency.
overview_health "1" // Show players health in map overview.
overview_locked "1" // doesnt follow view angle.
overview_mode // large: <0|1|2>
overview_names "1" // Show players names in map overview.
overview_tracks "1" // Show players tracks in map overview.
overview_zoom // Sets overview map zoom: <zoom> [<time>] [rel]
pain_pills_decay_rate "0"
pain_pills_health_threshold "99" // Pills cant be used unless total health is less than this amount
pain_pills_health_value "50"
panel_test_title_safe "0" // Test vgui panel positioning with title safe indentation
particle_simulateoverflow "0" // Used for stress-testing particle systems. Randomly denies creation of particles.
particle_test_attach_attachment "0" // Attachment index for attachment mode
particle_test_attach_mode "0" // follow_origin
particle_test_file "0" // Name of the particle system to dynamically spawn
particle_test_start // particle_test_attach_mode and particl
particle_test_stop // Stops all particle systems on the selected entities. Arguments: {entity_name} / {class_name} / no argument picks what playe
password "0" // Current server access password
path // Show the engine filesystem path.
pause // Toggle the server pause state.
perfui // Show/hide the level performance tools UI.
perfvisualbenchmark
perfvisualbenchmark_abort
personalstats // Shows the player stats dialog
physics_budget // Times the cost of each active object
physics_constraints // Highlights constraint system graph for an entity
physics_debug_entity // Dumps debug info for an entity
physics_highlight_active // Turns on the absbox for all active physics objects
physics_report_active // Lists all active physics objects
physics_select // Dumps debug info for an entity
picker // pivot and debugging text is displayed for whatever entity the play
ping // Display ping to server.
pingserver // Ping a server for info
pixelvis_debug // Dump debug info
play // Play a sound.
playdemo // Play a recorded demo file (.dem ).
player_debug_print_damage "0" // print amount and type of all damage received by player to console.
playflush // reloading from disk in case of changes.
playgamesound // Play a sound from the game sounds txt file
playsoundscape // Forces a soundscape to play
playvideo // Plays a video: <filename> [width height]
playvideo_exitcommand // Plays a video and fires and exit command when it is stopped or finishes: <filename> <exit command>
playvol // Play a sound at a specified volume.
plugin_load // plugin_load <filename> : loads a plugin
plugin_pause // plugin_pause <index> : pauses a loaded plugin
plugin_pause_all // pauses all loaded plugins
plugin_print // Prints details about loaded plugins
plugin_unload // plugin_unload <index> : unloads a plugin
plugin_unpause // plugin_unpause <index> : unpauses a disabled plugin
plugin_unpause_all // unpauses all disabled plugins
polish_demo // Polish the given demo. Pass demo name as only parameter.
print_colorcorrection // Display the color correction layer information.
progress_enable
prop_crosshair // Shows name for prop looking at
prop_debug // props will show colorcoded bounding boxes. Red means ignore all damage. White means respond phys
prop_dynamic_create // Creates a dynamic prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
prop_physics_create // Creates a physics prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
pwatchent "-1" // Entity to watch for prediction system changes.
pwatchvar "0" // Entity variable to watch in prediction system for changes.
pz_damages // List player zombie damages
quit // Exit the engine.
radialmenu // Opens a radial menu
ragdoll_velocity_multiplier "0" // Acceleration to last living velocity given to new ragdolls
rate "30000" // Max bytes/sec the host can receive data
rcon // Issue an rcon command.
rcon_password "0" // remote console password.
recompute_speed // Recomputes clock speed (for debugging purposes).
record // Record a demo.
reload // Reload the most recent saved game (add setpos to jump to current view position on reload).
removeid // Remove a user ID from the ban list.
removeip // Remove an IP address from the ban list.
report
report_cliententitysim "0" // List all clientside simulations and time - will report and turn itself off.
report_clientthinklist "0" // List all clientside entities thinking and time - will report and turn itself off.
report_entities // Lists all entities
report_simthinklist // Lists all simulating/thinking entities
report_soundpatch // reports sound patch count
report_touchlinks // Lists all touchlinks
rescue_distance "4500" // Living survivors must travel this far past a dead survivors corpse to be able to rescue him
rescue_finale_ignore_distance "4000" // he stops calling for help
rescue_finale_spawn_range "4000" // info_survivor_rescue ents will be considered if they are this close to the leading survivor
rescue_ignore_distance "2000" // he stops calling for help
rescue_interval "2" // Dead survivors are checked to start calling for help this often
rescue_min_dead_time "60" // Duration in seconds a survivor must be dead before being rescuable
rescue_range "1000" // it will be triggered
rescue_show // Shows debugging info for info_survivor_rescue ents
rescue_spawn_flow "400" // info_survivor_rescue ents will be considered if they are no more than this far ahead in flow distance from the leading survivor
rescue_spawn_range "2000" // info_survivor_rescue ents will be considered if they are this close to the leading survivor
rescue_update_nav // Updates RESCUE_CLOSET nav flags
rescue_vs "0" // Rescue closets in vs mode
rescue_yell_delay "1" // Delay before yelling when activating
rescue_yell_interval "6" // Interval at which an info_survivor_rescue yells for help
reset_gameconvars // Reset a bunch of game convars to default values
respawn_entities // Respawn all the entities in the map.
restart // Restart the game on the same level (add setpos to jump to current view position on restart).
retry // Retry connection to last server.
rope_min_pixel_diameter "2"
rr_followup_maxdist "1800" // then ANY or then ALL response followups will be dispatched only to characters within this distance.
rr_reloadresponsesystems // Reload all response system scripts.
rr_remarkable_world_entities_replay_limit "1" // TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable
rr_thenany_score_slop "0" // all rule-matching scores within this much of the best score will be considere
r_3dnow // Enable/disable 3DNow code
r_AirboatViewDampenDamp "1"
r_AirboatViewDampenFreq "7"
r_AirboatViewZHeight "0"
r_ambientfraction "0" // Fraction of direct lighting used to boost lighting when model requests
r_ambientlightingonly "0" // Set this to 1 to light models with only ambient lighting (and no static lighting).
r_avglight "1"
r_avglightmap "0"
r_cheapwaterend
r_cheapwaterstart
r_cleardecals // Usage r_cleardecals <permanent>.
r_ClipAreaPortals "1"
r_colorstaticprops "0"
r_debugcheapwater "0"
r_debugrandomstaticlighting "0" // Set to 1 to randomize static lighting for debugging. Must restart for change to take affect.
r_depthoverlay "0" // Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output.
r_DispBuildable "0"
r_DispWalkable "0"
r_DrawBeams "1" // 2=Wireframe
r_drawbrushmodels "1" // 2=Wireframe
r_drawclipbrushes "0" // purple=NPC)
r_drawdecals "1" // Render decals.
r_DrawDisp "1" // Toggles rendering of displacment maps
r_drawentities "1"
r_drawfuncdetail "1" // Render func_detail
r_drawleaf "-1" // Draw the specified leaf.
r_drawlightcache "0" // 0: off 1: draw light cache entries 2: draw rays
r_drawlightinfo "0"
r_drawlights "0"
r_DrawModelLightOrigin "0"
r_drawmodelstatsoverlay "0"
r_drawmodelstatsoverlaydistance "500"
r_drawmodelstatsoverlaymax "1" // time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2
r_drawmodelstatsoverlaymin "0" // time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2
r_drawopaquerenderables "1"
r_drawopaqueworld "1"
r_drawothermodels "1" // 2=Wireframe
r_drawparticles "1" // Enable/disable particle rendering
r_DrawPortals "0"
r_DrawRain "1" // Enable/disable rain rendering.
r_drawrenderboxes "0"
r_drawropes "1"
r_drawskybox "1"
r_drawsprites "1"
r_drawstaticprops "1" // 2=Wireframe
r_drawtracers "1"
r_drawtranslucentrenderables "1"
r_drawtranslucentworld "1"
r_drawvgui "1" // Enable the rendering of vgui panels
r_drawviewmodel "1"
r_drawworld "1" // Render the world.
r_dscale_basefov "90"
r_dscale_fardist "2000"
r_dscale_farscale "4"
r_dscale_neardist "100"
r_dscale_nearscale "1"
r_dynamic "1"
r_dynamiclighting "1"
r_eyemove "1"
r_eyeshift_x "0"
r_eyeshift_y "0"
r_eyeshift_z "0"
r_eyesize "0"
r_eyewaterepsilon "7"
r_farz "-1" // Override the far clipping plane. -1 means to use the value in env_fog_controller.
r_flashlightambient "0"
r_flashlightbacktraceoffset "0"
r_flashlightbrightness "0"
r_flashlightclip "0"
r_flashlightconstant "0"
r_flashlightdrawclip "0"
r_flashlightfar "750"
r_flashlightfov "53"
r_flashlightinfectedtexture "0"
r_flashlightladderdist "40"
r_flashlightlinear "100"
r_flashlightlockposition "0"
r_flashlightmuzzleflashfov "120"
r_flashlightnear "4"
r_flashlightnearoffsetscale "0"
r_flashlightoffsetforward "0"
r_flashlightoffsetforward_low "0"
r_flashlightoffsetright "5"
r_flashlightoffsetright_low "10"
r_flashlightoffsetup "-5"
r_flashlightoffsetup_low "-16"
r_flashlightquadratic "0"
r_flashlightshadowatten "0"
r_flashlightvisualizetrace "0"
r_flashlight_attach_to_viewmodel "1" // Attach the flashlight effect to the viewmodel
r_flushlod // Flush and reload LODs.
r_hwmorph "0"
r_itemblinkmax "0"
r_itemblinkrate "4"
r_JeepFOV "90"
r_JeepViewBlendTo "1"
r_JeepViewBlendToScale "0"
r_JeepViewBlendToTime "1"
r_JeepViewDampenDamp "1"
r_JeepViewDampenFreq "7"
r_JeepViewZHeight "10"
r_lightcachecenter "1"
r_lightcachemodel "-1"
r_lightcache_invalidate
r_lightcache_numambientsamples "162" // number of random directions to fire rays when computing ambient lighting
r_lightcache_radiusfactor "1000" // Allow lights to influence lightcaches beyond the lights radii
r_lightinterp "5" // 0 turns off interpolation
r_lightmap "-1"
r_lightstyle "-1"
r_lightwarpidentity "0"
r_lockpvs "0" // Lock the PVS so you can fly around and inspect what is being drawn.
r_mapextents "16384" // Set the max dimension for the map. This determines the far clipping plane
r_modelwireframedecal "0"
r_nohw "0"
r_nosw "0"
r_novis "0" // Turn off the PVS.
r_occlusionspew "0" // Activate/deactivates spew about what the occlusion system is doing.
r_oldlightselection "0" // Set this to revert to HL2s method of selecting lights
r_partition_level "-1" // Displays a particular level of the spatial partition system. Use -1 to disable it.
r_PhysPropStaticLighting "0"
r_portalsopenall "0" // Open all portals
r_PortalTestEnts "1" // Clip entities against portal frustums.
r_printdecalinfo
r_proplightingpooling "-1" // 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset
r_radiosity "4" // 0: no radiosity 1: radiosity with ambient cube (6 samples) 2: radiosity with 162 samples 3: 162 samples for static props, 6 sam
r_rainalpha "0"
r_rainalphapow "0"
r_RainCheck "0" // Enable/disable IsInAir() check for rain drops?
r_RainDebugDuration "0" // Shows rain tracelines for this many seconds (0 disables)
r_raindensity "0"
r_RainHack "0"
r_rainlength "0"
r_RainProfile "0" // Enable/disable rain profiling.
r_RainRadius "1500"
r_RainSideVel "10" // How much sideways velocity rain gets.
r_RainSimulate "1" // Enable/disable rain simulation.
r_rainspeed "600"
r_RainSplashPercentage "20"
r_rainwidth "0"
r_randomflex "0"
r_screenoverlay // Draw specified material as an overlay
r_shadowangles // Set shadow angles
r_shadowblobbycutoff // some shadow stuff
r_shadowcolor // Set shadow color
r_shadowdir // Set shadow direction
r_shadowdist // Set shadow distance
r_shadowfromanyworldlight "0"
r_shadowfromworldlights_debug "0"
r_shadowids "0"
r_shadows_gamecontrol "-1"
r_shadowwireframe "0"
r_shadow_debug_spew "0"
r_shadow_deferred "0" // Toggle deferred shadow rendering
r_showenvcubemap "0"
r_showz_power "1"
r_skin "0"
r_skybox "1" // Enable the rendering of sky boxes
r_slowpathwireframe "0"
r_SnowColorBlue "200" // Snow.
r_SnowColorGreen "175" // Snow.
r_SnowColorRed "150" // Snow.
r_SnowDebugBox "0" // Snow Debug Boxes.
r_SnowEnable "1" // Snow Enable
r_SnowEndAlpha "255" // Snow.
r_SnowEndSize "0" // Snow.
r_SnowFallSpeed "1" // Snow fall speed scale.
r_SnowInsideRadius "256" // Snow.
r_SnowOutsideRadius "1024" // Snow.
r_SnowParticles "500" // Snow.
r_SnowPosScale "1" // Snow.
r_SnowRayEnable "1" // Snow.
r_SnowRayLength "8192" // Snow.
r_SnowRayRadius "256" // Snow.
r_SnowSpeedScale "1" // Snow.
r_SnowStartAlpha "25" // Snow.
r_SnowStartSize "1" // Snow.
r_SnowWindScale "0" // Snow.
r_SnowZoomOffset "384" // Snow.
r_SnowZoomRadius "512" // Snow.
r_sse2 // Enable/disable SSE2 code
r_swingflashlight "1"
r_updaterefracttexture "1"
r_vehicleBrakeRate "1"
r_VehicleViewClamp "1"
r_VehicleViewDampen "1"
r_visocclusion "0" // Activate/deactivate wireframe rendering of what the occlusion system is doing.
r_visualizelighttraces "0"
r_visualizelighttracesshowfulltrace "0"
r_visualizetraces "0"
save // Saves current game.
save_finish_async
say // Display player message
say_team // Display player message to team
sb_add // Add a Survivor Bot.
sb_all_bot_team "0" // Allow a team of nothing but bots
sb_always_hurry_vs "1" // always run in VS mode
sb_battlestation_give_up_range_from_human "1500"
sb_battlestation_human_hold_time "4" // How long the nearest human must hold their place before SurvivorBots will re-evaluate their Battlestations
sb_close_checkpoint_door_interval "2"
sb_close_threat_range "200"
sb_combat_saccade_speed "1000"
sb_crouch "0" // Forces survivor bots to crouch
sb_debug_apoproach_wait_time "5" // How long a SurvivorBot waits once it reaches its debug move-to spot
sb_debug_buddy "0"
sb_debug_locomotion "0"
sb_debug_retreat "0"
sb_debug_team_avoidance "0"
sb_dont_bash "0" // Force SurvivorBots to not bash
sb_dont_shoot "0" // Force SurvivorBots to not fire their weapons
sb_enforce_proximity_lookat_timeout "10"
sb_enforce_proximity_range "1500"
sb_far_hearing_range "1500"
sb_flashlight "0" // Forces survivor bots to use flashlights (-1 to force off)
sb_follow_stress_factor "0"
sb_force_max_intensity // Force intensity of selected SurvivorBot to maximum level.
sb_friendlyfire "0"
sb_friend_immobilized_reaction_time_expert "0" // How quickly a SurvivorBot realizes a friend has been Pounced or Tongued
sb_friend_immobilized_reaction_time_hard "1" // How quickly a SurvivorBot realizes a friend has been Pounced or Tongued
sb_friend_immobilized_reaction_time_normal "2" // How quickly a SurvivorBot realizes a friend has been Pounced or Tongued
sb_friend_immobilized_reaction_time_vs "0" // How quickly a SurvivorBot realizes a friend has been Pounced or Tongued
sb_give // Give an item to each Survivor bot
sb_give_random_weapon // Give a random weapon to each Survivor bot
sb_hindrance_range "150"
sb_hold_position "0" // Force SurvivorBots to stand still
sb_locomotion_wait_threshold "10"
sb_max_battlestation_range_from_human "750"
sb_max_scavenge_separation "750" // SurvivorBots wont scavenge items farther away from the group than this
sb_min_attention_notice_time "0" // Ill notice
sb_min_orphan_time_to_cover "1"
sb_move "1" // Stop all SurvivorBots from moving
sb_move_to_cursor // Sends survivor bots to cursor target
sb_narrow_corridor_width "100"
sb_near_hearing_range "500"
sb_neighbor_range "300" // How close a friend needs to be to feel safe
sb_normal_saccade_speed "350"
sb_open_fire "0" // Forces survivor bots to fire continuously
sb_path_lookahead_range "300"
sb_perf_crawl "0" // survivor bot will be doing a perf-crawl walk through the map
sb_perf_crawl_ang "5" // Rotation angles at perf-crawl snapshots in the map
sb_perf_crawl_dist "128" // Distance between perf-crawl snapshots in the map
sb_perf_crawl_time "1" // How much time is spent at each perf-crawl spot/ang in the map
sb_perf_dump "0" // low perf places will be dumped
sb_perf_dump_bots "0" // manager
sb_pushscale "1"
sb_reachability_cache_lifetime "3"
sb_replacement_interval "0" // Force SurvivorBots to be replaced after this many seconds for stress testing
sb_rescue_vehicle_loading_range "300" // How close to the arrival point of the rescue vehicle SurvivorBots try to get
sb_separation_danger_max_range "600" // A Survivor teammate this far away needs to be gathered back into the group
sb_separation_danger_min_range "500" // A Survivor teammate this far away is straying from the group
sb_separation_range "200" // Desired distance between Survivors
sb_show_threat_areas "0"
sb_sidestep_for_horde "0" // Allow sidestepping left/right to acquire common infected targets
sb_stop "0" // Forces survivor bots to stand still
sb_takecontrol // Take control of a bot.
sb_threat_close_range "150" // Very close range for threats
sb_threat_exposure_stop "200000"
sb_threat_exposure_walk "50000"
sb_threat_far_range "600" // Close enough to be a threat if near several other threats
sb_threat_medium_range "300" // even when neutral
sb_threat_very_close_range "150"
sb_threat_very_far_range "1500" // even for boss infected
sb_unstick "1"
sb_use_button_range "1000"
sb_vomit_blind_time "5" // How long Boomer vomit/explosion gore blinds us
scene_flush // Flush all .vcds from the cache and reload from disk.
scene_showlook "0" // show the directions of look events.
scene_showmoveto "0" // show the end location.
scene_showunlock "0" // Show when a vcd is playing but normal AI is running.
screenshot // Take a screenshot.
select_cliff // Selects all NAV_MESH_CLIFF areas.
select_invalid_finale_nospawn // Selects all FINALE_NOSPAWN areas that arent also FINALE.
select_with_attribute // Selects areas with the given attribute.
sensitivity "1" // Mouse sensitivity.
server_game_time // Gives the game time in seconds (servers curtime)
setang // Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).
setang_exact // Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).
setinfo // Adds a new user info value
setmaster // add/remove/enable/disable master servers
setmodel // Changess players model
setpause // Set the pause state of the server.
setpos // Move player to specified origin (must have sv_cheats).
setpos_exact // Move player to an exact specified origin (must have sv_cheats).
setpos_player // Move specified player to specified origin (must have sv_cheats).
shake // Shake the screen.
shake_stop // Stops all active screen shakes.
shout_going_to_die_interval "20"
shout_make_way_interval "2"
shout_max_warn_range "2000"
shout_min_special_warn_interval "5"
shout_min_use_range "200"
shout_min_warn_interval "10"
shout_threat_range "500"
shout_view_motion_threshold "0"
shout_view_target_threahold "0"
showbudget_texture "0" // Enable the texture budget panel.
showbudget_texture_global_dumpstats // Dump all items in +showbudget_texture_global in a text form
showconsole // Show the console.
showGameSettings
showinfo // Shows a info panel: <type> <title> <message> [<command>]
showpanel // Shows a viewport panel <name>
showtriggers "0" // Shows trigger brushes
showtriggers_toggle // Toggle show triggers
show_menu // Opens a menu
shriek_shake_amplitude "10"
shriek_shake_duration "2"
shriek_shake_frequency "5"
singlestep "0" // Run engine in single step mode ( set next to 1 to advance a frame )
skill "1" // Game skill level (1-3).
sk_autoaim_mode "1"
slot0
slot1
slot10
slot2
slot3
slot4
slot5
slot6
slot7
slot8
slot9
Smoker_escape_range "750"
smoker_pz_claw_dmg "4" // Amount of damage done by a PZ smokers regular melee attack
smoker_tongue_delay "1"
snapto
sndplaydelay
snd_async_flush // Flush all unlocked async audio data
snd_async_showmem // Show async memory stats
snd_async_showmem_music // Show async memory stats for just non-streamed music
snd_async_showmem_summary // Show brief async memory stats
snd_buildsoundcachefordirectory // rebuild sound.cache for full path to directory ending with a sound/ folder
snd_duckerattacktime "0"
snd_duckerreleasetime "2"
snd_duckerthreshold "0"
snd_ducktovolume "0"
snd_dumpclientsounds // Dump sounds to console
snd_dump_filepaths
snd_filter "0"
snd_foliage_db_loss "4" // foliage dB loss per 1200 units
snd_gain "1"
snd_gain_max "1"
snd_gain_min "0"
snd_getmixer // Get data related to mix group matching string
snd_legacy_surround "0"
snd_list_mixers // List all mixers to dev console.
snd_list_mix_groups // List all mix groups to dev console.
snd_mixahead "0"
snd_musicvolume "0" // Music volume
snd_obscured_gain_dB "-2"
snd_pitchquality "1"
snd_playsounds // Play sounds from the game sounds txt file at a given location
snd_play_in_out // Plays one of two sounds from entity depending on players in/out location
snd_prefetch_common "1" // Prefetch common sounds from directories specified in scripts/sound_prefetch.txt
snd_pre_gain_dist_falloff "1"
snd_rebuildaudiocache // rebuild audio cache
snd_rebuildlocalizedaudiocache // rebuild audio cache for all localization
snd_refdb "60" // Reference dB at snd_refdist
snd_refdist "36" // Reference distance for snd_refdb
snd_restart // Restart sound system.
snd_setmixer // solo.
snd_setmixlayer // solo.
snd_setmixlayer_amount // Set named mix layer mix amount.
snd_setsoundparam // Set a sound paramater
snd_showstart "0"
snd_soundmixer_flush // Reload soundmixers.txt file.
snd_updateaudiocache // checks _master.cache based on file sizes and rebuilds any change/new entries
snd_visualize "0" // Show sounds location in world
snd_writemanifest // outputs the precache manifest for the current level
soundfade // Fade client volume.
soundinfo // Describe the current sound device.
soundlist // List all known sounds.
soundscape_debug "0" // red lines show soundscapes that ar
soundscape_dumpclient // Dumps the clients soundscape data.
soundscape_fadetime "1" // Time to crossfade sound effects between soundscapes
soundscape_flush // Flushes the server & client side soundscapes
spawnboomermenu // Show the Spawn Mode menu for boomers
spawnhuntermenu // Show the Spawn Mode menu for hunters
spawnmodemenu // Show the Spawn Mode menu
spawnsmokermenu // Show the Spawn Mode menu for smokers
speak // Play a constructed sentence.
spec_allowroaming "0"
spec_centerchasecam "0" // in chase came mode
spec_chasedistancestep "10" // Amount to adjust the chase cams distance on a zoom request
spec_cinematic "0"
spec_freeze_distance_max "200" // Maximum random distance from the target to stop when framing them in observer freeze cam.
spec_freeze_distance_min "96" // Minimum random distance from the target to stop when framing them in observer freeze cam.
spec_freeze_time "4" // Time spend frozen in observer freeze cam.
spec_freeze_traveltime "0" // Time taken to zoom in to frame a target in observer freeze cam.
spec_help // Show spectator help screen
spec_keep_team_cc "1" // Use team color correction even when spectating in vs mode
spec_keep_team_glows "1" // Use team glows even when spectating in vs mode
spec_menu // Activates spectator menu
spec_mode // Set spectator mode
spec_next // Spectate next player
spec_player // Spectate player by name
spec_pos // dump position and angles to the console
spec_prev // Spectate previous player
spec_scoreboard "0"
spec_target
spec_target_clear
spike // generates a fake spike
ss_enable "0" // Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT
ss_map // Start playing on specified map with max allowed splitscreen players.
ss_splitmode "0" // 2 - vertical (only allowed in widescr
startdemos // Play demos in demo sequence.
startmovie // Start recording movie frames.
startupmenu // and were not in developer
star_memory // Dump memory stats
stats // Prints server performance variables
stats_nexthighlight
status // Display map and connection status.
stop // Finish recording demo.
stopdemo // Stop playing back a demo.
stopsound
stopsoundscape // Stops all soundscape processing and fades current looping sounds
stringtabledictionary // Create dictionary for current strings.
stuffcmds // Parses and stuffs command line + commands to command buffer.
suitvolume "0"
surfaceprop // Reports the surface properties at the cursor
survivor_accuracy_upgrade_factor "0"
survivor_autolook_voc_delay "1" // a survivor will say a smartlook concept for it if available.
survivor_burn_factor_easy "0" // Flame damage multiplier
survivor_burn_factor_expert "1" // Flame damage multiplier
survivor_burn_factor_hard "0" // Flame damage multiplier
survivor_burn_factor_normal "0" // Flame damage multiplier
survivor_calm_damage_delay "5" // survivors are not calm for this many seconds after taking damage
survivor_calm_deploy_delay "2" // survivors are not calm for this many seconds after switching weapons
survivor_calm_intensity "0" // survivors are not calm if their intensity level is above this point
survivor_calm_no_flashlight "1" // to keep the weapon pointing along the flashlight beam
survivor_calm_recent_enemy_delay "5" // survivors are not calm for this many seconds after seeing an enemy
survivor_calm_weapon_delay "5" // survivors are not calm for this many seconds after firing
survivor_commando_factor "2"
survivor_crawl_speed "15"
survivor_crouch_speed "75"
survivor_damage_speed_factor "0" // How much a Survivor is slowed when hit by an Infected
survivor_debug_active_area_set "0"
survivor_debug_in_combat "0"
survivor_debug_visibility "0"
survivor_drag_speed_multiplier "0" // Multiplier to speed when we are dragging somebody.
survivor_drag_type "0" // 2: continuous drag
survivor_extra_damage_ammo_factor "1"
survivor_ff_avoidance "0"
survivor_ff_avoidance_pitch "20"
survivor_ff_avoidance_yaw "10"
survivor_ff_tolerance "26"
survivor_fog_vocalize_percent "0" // The percent of the fog end distance that stops vocalizations.
survivor_friendly_fire_factor_easy "0"
survivor_friendly_fire_factor_expert "1"
survivor_friendly_fire_factor_hard "0"
survivor_friendly_fire_factor_normal "0"
survivor_fumes_run_speed "85"
survivor_fumes_walk_speed "85"
survivor_groupie_range "350"
survivor_groupie_regenerate_rate "0"
survivor_hanging_eye_height "85"
survivor_hanging_from_tongue_eye_height "40"
survivor_helping_hand_inhibit_duration "1"
survivor_hitsound_interval_timer "0"
survivor_incapacitated_accuracy_penalty "0" // Penalty given for shooting while incapacitated.
survivor_incapacitated_cycle_time "0" // overriding weapon.
survivor_incapacitated_dizzy_severity "2" // how much bump we add to a incapd players mouse.
survivor_incapacitated_dizzy_timer "2" // How often our incapd dizzy-drift changes directions.
survivor_incapacitated_eye_height "24"
survivor_incapacitated_max_yaw "180"
survivor_incapacitated_reload_multiplier "1" // Multiplier to reload time when incapacitated.
survivor_incapacitated_roll "20"
survivor_intensity_decay_threat_range "750"
survivor_intensity_recent_enemy_duration "5"
survivor_it_duration "20"
survivor_knockdown_roll "-20"
survivor_ledge_scales_health "1"
survivor_limp_health "40"
survivor_limp_run_speed "150"
survivor_limp_walk_speed "85"
survivor_max_incapacitated_count "2" // How many times you can be incapacitated instead of killed between health kits.
survivor_max_lunge_stagger_distance "30" // crouched survivor can stagger after being lunged.
survivor_max_lunge_stagger_speed "220" // Hunters lunging this fast stagger survivors with full power.
survivor_max_tongue_stagger_distance "200"
survivor_max_tongue_stagger_duration "1"
survivor_max_tug_distance "300"
survivor_max_tug_duration "1"
survivor_min_local_yaw "-45"
survivor_min_lunge_stagger_speed "50" // Hunters must be lunging this fast to stagger a survivor.
survivor_no_pounce_or_hang "0"
survivor_pounce_victim_eye_height "12"
survivor_push "0"
survivor_revive_duration "5"
survivor_revive_health "30" // How much temp health you get revived with.
survivor_revive_successive_penalty "0" // How much less temp health you get each revive.
survivor_shove_teammates "0"
survivor_speed "210"
survivor_speed_boost_factor "1" // Speed boost from upgrade
survivor_sprint_multiplier "1"
survivor_still_penalty "3" // Amount gun accuracy is affected when the view is not still
survivor_stun_immunity_duration "0"
survivor_team_hit_pitch_max "10"
survivor_team_hit_pitch_min "-10"
survivor_team_hit_yaw_max "10"
survivor_team_hit_yaw_min "-10"
survivor_unstoppable_speed "150"
survivor_upgrade_accuracy "0"
survivor_upgrade_quickdraw "0"
survivor_use_glow_range "500"
survivor_vision_range "1500"
survivor_vision_range_obscured "750"
survivor_walk_speed "85"
sv_allow_lobby_connect_only "1" // may not connect directly.
sv_allow_wait_command "1" // Allow or disallow the wait command on clients connected to this server.
sv_alltalk "1" // no team restrictions
sv_alternateticks "0" // server only simulates entities on even numbered ticks.
sv_banid_enabled "1" // Whether server supports banid command
sv_cheats "0" // Allow cheats on server
sv_clearhinthistory // Clear memory of server side hints displayed to the player.
sv_consistency "1" // Whether the server enforces file consistency for critical files
sv_contact "0" // Contact email for server sysop
sv_crash // Causes a server crash for testing
sv_cycle_latch_timer "0" // How often to transmit our cycle to the client for corrections.
sv_disable_querycache "0" // debug - disable trace query cache
sv_doors_push_players "0" // a door will push players out of the way as it opens and closes.
sv_downloadurl "0" // Location from which clients can download missing files
sv_dumpstringtables "0"
sv_footstepinterval "0"
sv_forcepreload "0" // Force server side preloading.
sv_gametypes "0" // usually set on server launch command line.
sv_infinite_ammo "0" // Players active weapon will never run out of ammo
sv_lagcompensationforcerestore "1" // just do it.
sv_lan "0" // no non-class C addresses )
sv_logbans "0" // Log server bans in the server logs.
sv_logecho "1" // Echo log information to the console.
sv_logfile "1" // Log server information in the log file.
sv_logflush "0" // Flush the log file to disk on each write (slow).
sv_logsdir "0" // Folder in the game directory where server logs will be stored.
sv_log_onefile "0" // Log server information to only one file.
sv_master_legacy_mode "0" // Use (outside-of-Steam) code to communicate with master servers.
sv_maxcmdrate "40" // this sets the maximum value for cl_cmdrate.
sv_maxrate "0" // 0 == unlimited
sv_memlimit "0" // the server will exit.
sv_mincmdrate "0" // This sets the minimum value for cl_cmdrate. 0 == unlimited.
sv_minrate "5000" // 0 == unlimited
sv_noclipaccelerate "5"
sv_noclipduringpause "0" // etc.).
sv_noclipspeed "5"
sv_password "0" // Server password for entry into multiplayer games
sv_pausable "0" // Is the server pausable.
sv_precacheinfo // Show precache info.
sv_prop_door_max_close_attempts "8" // Number of times blocked doors will try to close before becoming non-solid and forcing a close.
sv_pure // Show user data.
sv_pure_kick_clients "1" // it will issue a warning to the client.
sv_pure_trace "0" // the server will print a message whenever a client is verifying a CRC for a file.
sv_pvsskipanimation "1" // Skips SetupBones when npcs are outside the PVS
sv_querycache_stats // Display status of the query cache (client only)
sv_region "-1" // The region of the world to report this server in.
sv_reservation_timeout "45" // Time in seconds before lobby reservation expires.
sv_search_key "0" // restrict search to only dedicated servers having the same sv_search_key.
sv_search_team_key "0" // set this key to match with known opponents team
sv_showfootsteps "0" // 3=both)
sv_showhitboxes "-1" // use on listen server only).
sv_showlagcompensation "0" // Show lag compensated hitboxes whenever a player is lag compensated.
sv_showposeparams "1"
sv_showtags // Describe current gametags.
sv_shutdown // Sets the server to shutdown when all games have completed
sv_skyname "0" // Current name of the skybox texture
sv_soundscape_printdebuginfo // print soundscapes
sv_specaccelerate "5"
sv_specnoclip "1"
sv_specspeed "3"
sv_spectatoridletime "3"
sv_steamgroup "0" // The ID of the steam group that this server belongs to. You can find your groups ID on the admin profile page in the steam comm
sv_steamgroup_exclusive "0" // public people will be able to join the ser
sv_tags "0" // Server tags. Used to provide extra information to clients when theyre browsing for servers. Separate tags with a comma.
sv_tankpropfade "1"
sv_turbophysics_shadow "0" // players have physics shadows even when sv_turbophysics is 1
sv_unlockedchapters "1" // Highest unlocked game chapter.
sv_visiblemaxplayers "-1" // Overrides the max players reported to prospective clients
sv_voiceenable "1"
sys_minidumpspewlines "500" // Lines of crash dump console spew to keep.
tank_attack_range "50" // Distance from Survivor that tank triggers own swing.
tank_auto_swing "0"
tank_burn_duration_expert "40" // Number of seconds a burning Tank takes to die
tank_burn_duration_hard "35" // Number of seconds a burning Tank takes to die
tank_burn_duration_normal "30" // Number of seconds a burning Tank takes to die
tank_burn_duration_vs "30" // Number of seconds a burning Tank takes to die
tank_fist_radius "15"
tank_ground_pound_duration "1"
tank_ground_pound_reveal_distance "500"
tank_raffle_debug "0" // Fill the tank raffle with dummy values for debugging
tank_stasis_time_suicide "30"
tank_stuck_failsafe "1"
tank_stuck_time_choose_new_target "2"
tank_stuck_time_suicide "10"
tank_stuck_visibility_tolerance_choose_new_target "5"
tank_stuck_visibility_tolerance_suicide "15"
tank_swing_arc "180"
tank_swing_duration "0" // Duration of the actual swing
tank_swing_fast_interval "0" // Interval between tank swings when he is clearing zombies out of his path
tank_swing_interval "1" // Interval between tank swings
tank_swing_miss_interval "1" // Interval between tank swings after a miss
tank_swing_physics_prop_force "4" // Multiplier for tank hitting a phys prop.
tank_swing_range "56" // Range of the actual swing
tank_swing_yaw "80"
tank_throw_aim_error "100" // Margin of error for Easy mode Tank rock throws
tank_throw_allow_range "250" // How far away our victim must be before well try to throw debris at them
tank_throw_lead_time_factor "0" // How much to lead a moving target
tank_throw_loft_rate "0" // Tank adds this angle/distance when throwing
tank_throw_max_loft_angle "30" // Maximum loft angle for Tank throw angle adjustment
tank_throw_min_interval "8" // Minimum interval between Tank rock throws
tank_visibility_tolerance_suicide "60"
tank_windup_time "0" // Time from intent to swing that swing actually happens.
terror_ammo_multiplier "2"
testhudanim // Test a hud element animation. Arguments: <anim name>
Test_CreateEntity
test_dispatcheffect // Test a clientside dispatch effect. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale> Defau
Test_EHandle
test_entity_blocker // Test command that drops an entity blocker out in front of the player.
test_freezeframe // Test the freeze frame code.
Test_InitRandomEntitySpawner
Test_Loop // Test_Loop <loop name> - loop back to the specified loop start point unconditionally.
Test_LoopCount // Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.
Test_LoopForNumSeconds // Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.
test_outtro_stats
test_point
test_progression_loop "0" // advance through maps and loop back to start
test_progression_loop_rotate_maps "1" // advance to the next map when reach end of campaign
test_progression_loop_time "3" // specified
test_progression_restarts_before_rotate "4" // how many times to restart before moving to next campaign
Test_ProxyToggle_EnableProxy
Test_ProxyToggle_EnsureValue // Test_ProxyToggle_EnsureValue
Test_ProxyToggle_SetValue
Test_RandomChance // 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percenta
Test_RandomizeInPVS
Test_RandomPlayerPosition
Test_RemoveAllRandomEntities
Test_RunFrame
Test_SendKey
Test_SpawnRandomEntities
Test_StartLoop // Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.
Test_StartScript // Start a test script running..
Test_Wait
Test_WaitForCheckPoint
texture_budget_background_alpha "128" // how translucent the budget panel is
texture_budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
texture_budget_panel_height "284" // height in pixels of the budget panel
texture_budget_panel_width "512" // width in pixels of the budget panel
texture_budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
texture_budget_panel_y "450" // number of pixels from the top side of the game screen to draw the budget panel
think_limit "10" // warning is printed if this is exceeded.
thirdperson // Switch to thirdperson camera.
thirdpersonshoulder // Switch to thirdperson-shoulder camera.
thirdperson_mayamode // Switch to thirdperson Maya-like camera controls.
threadpool_cycle_reserve // Cycles threadpool reservation by powers of 2
threadpool_run_tests
thread_test_tslist
thread_test_tsqueue
timedemo // Play a demo and report performance info.
timedemoquit // and then exit
timedemo_vprofrecord // Play a demo and report performance info. Also record vprof data for the span of the demo
timerefresh // Profile the renderer.
tir_maxpitch "15" // TrackIR Max Pitch
tir_maxroll "90" // TrackIR Max Roll
tir_maxx "4" // TrackIR Max X
tir_maxy "6" // TrackIR Max Y
tir_maxyaw "90" // TrackIR Max Yaw
tir_maxz "1" // TrackIR Max Z
toggle // or cycles through a set of values.
toggleconsole // Show/hide the console.
togglescores // Toggles score panel
toggle_duck
toggle_multimap_scoreboard // Toggles the multi map versus scoreboard for testing
tongue_allow_voluntary_release "0" // Can a Smoker let go with his tongue by clicking or turning away?
tongue_bend_point_deflection "5" // How far off the first obstacle the tongue bends.
tongue_bend_point_needs_LOS "0" // Does a bent tongue still need LOS from the bend point?
tongue_break_from_damage_amount "50" // How much damage to the smoker makes him let go of his victim.
tongue_choke_damage_amount "10" // How much damage the choke does.
tongue_choke_damage_interval "1" // How often the choke does damage.
tongue_cone_start_tolerance "0" // How wide the cone is for a tongue hit.
tongue_debug "0" // Print debug info for tongue
tongue_drag_damage_amount "3" // How much damage the tongue drag does.
tongue_dropping_to_ground_time "2" // A miss or a wall hit will wait this long before pulling back.
tongue_fly_speed "1000" // How fast a tongue flies through the air.
tongue_force_break "0" // for debugging
tongue_gravity_force "4000" // The speed that gravity tries to pull us downwards while being tongued.
tongue_health "100" // Tongue health
tongue_hit_delay "20" // from the time he lets go.
tongue_kill_smoker_on_detach "1" // Do we kill the smoker when they take enough damage to detach the tongue?
tongue_los_forgiveness_time "1" // A traveling tongue can lose LOS for this amount of time and still hit.
tongue_miss_delay "15" // How long a smoker must wait to shoot his tongue after a miss.
tongue_no_progress_break_interval "10" // How long of the victim making no progress until we break the tongue.
tongue_no_progress_choke_early_ambush_delay "0" // Use a smaller delay if the smoker started choking us from behind. So this plus TongueNoProgressChokeTime equals the earliest st
tongue_no_progress_choke_early_delay "1" // We wont think about ground choking for this long after the hit. So this plus TongueNoProgressChokeTime equals the earliest sta
tongue_no_progress_choke_time "0" // start to hurt him.
tongue_no_progress_damage_interval "0" // How long of the victim making no progress until we start choking him.
tongue_no_progress_tolerance "25" // start to hurt him.
tongue_player_dropping_to_ground_time "1" // How long after the tongue disconnects will a player need to wait.
tongue_range "750" // How far a smoker can shoot his tongue.
tongue_release_fatigue_penalty "2500" // to slow him down.
tongue_start_pull_delay "0" // How long from tongue contact to tongue pulling.
tongue_unbend "1" // Can the smoker tongue unbend?
tongue_vertical_choke_dot "0" // DotProduct between tongue and vertical required to start choking.
tongue_vertical_choke_height "40" // Need to have victim this high off ground to choke him.
tongue_vertical_choke_time_off_ground "0" // Need to have victim off ground for this long to choke him.
tongue_victim_acceleration "30" // Acceleration while tongued.
tongue_victim_accuracy_penalty "0" // How much someones accuracy suffers while being dragged by a tongue.
tongue_victim_max_speed "175" // The fastest the tongue can get you going.
tongue_vs_cone_start_tolerance "0" // How wide the cone is for a tongue hit in versus.
tp_schedule_post_think "1" // Schedule post-think operations to run at 10hz
travel_distance // Build the shortest path from the previously marked area to the currently selected one and print the length of that path.
tv_clients // Shows list of connected SourceTV clients.
tv_enable "0" // Activates SourceTV on server.
tv_msg // Send a screen message to all clients.
tv_nochat "0" // Dont receive chat messages from other SourceTV spectators
tv_port "27020" // Host SourceTV port
tv_record // Starts SourceTV demo recording.
tv_relay // Connect to SourceTV server and relay broadcast.
tv_retry // Reconnects the SourceTV relay proxy.
tv_status // Show SourceTV server status.
tv_stop // Stops the SourceTV broadcast.
tv_stoprecord // Stops SourceTV demo recording.
ui_l4d_debug "0"
ui_play_online_browser "1" // Whether play online displays a browser or plain search dialog.
ui_posedebug_fade_in_time "0" // Time during which a new pose activity layer is shown in green in +posedebug UI
ui_posedebug_fade_out_time "0" // Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI
ui_public_lobby_filter_campaign "0" // Filter type for campaigns on the public lobby display
ui_public_lobby_filter_difficulty "0" // Filter type for difficulty on the public lobby display
ui_public_lobby_filter_status "0" // Filter type for game status on the public lobby display
ui_reloadscheme // Reloads the resource files for the active UI window
ui_showtitlesafe // Displays the title safty bounds on the current frame
unbind // Unbind a key.
unbindall // Unbind all keys.
unload_all_addons // Reloads the search paths for game addons.
unpause // Unpause the game.
update_addon_paths // Reloads the search paths for game addons.
use // Use a particular weapon Arguments: <weapon_name>
user // Show user data.
users // Show user info for players on server.
vcollide_wireframe "0" // Render physics collision models in wireframe
vehicle_flushscript // Flush and reload all vehicle scripts
version // Print version info string.
versus_boss_buffer "2200"
versus_boss_debug "0" // Enable debug output for versus tank/witch spawning logic
versus_boss_flow_max "0" // Max fraction of map flow for tank/witch spawn location
versus_boss_flow_max_finale "0" // Max fraction of map flow for tank/witch spawn location within the finale map of a campaign
versus_boss_flow_max_intro "0" // Max fraction of map flow for tank/witch spawn location within the first map of a campaign
versus_boss_flow_min "0" // Min fraction of map flow for tank/witch spawn location
versus_boss_flow_min_finale "0" // Min fraction of map flow for tank/witch spawn location within the finale map of a campaign
versus_boss_flow_min_intro "0" // Min fraction of map flow for tank/witch spawn location within the first map of a campaign
versus_boss_flow_test // so PZs can spawn even if survivors are still in the safe room
versus_boss_padding_max "0" // How far apart the tank/witch have to be along the flow
versus_boss_padding_min "0" // How far apart the tank/witch have to be along the flow
versus_boss_spawning "1" // Enable alternative spawning logic for tanks and witches in versus mode
versus_shove_hunter_fov "90" // Angle that survivor shove will hit hunters
versus_shove_hunter_fov_pouncing "45" // Angle that survivor shove will hit hunters while pouncing
versus_tank_bonus_health "1"
versus_tank_chance "0" // Chance of a tank spawning within a regular versus map
versus_tank_chance_finale "0" // Chance of a tank spawning within the finale map of a campaign
versus_tank_chance_intro "0" // Chance of a tank spawning within the first map of a campaign
versus_tank_flow_team_variation "0" // Window of flow distance that the tank can spawn in for the second team in versus
versus_winning_team_goes_last "1" // the team that is losing plays as survivors first
versus_witch_chance "0" // Chance of a witch spawning within a regular versus map
versus_witch_chance_finale "0" // Chance of a witch spawning within the finale map of a campaign
versus_witch_chance_intro "0" // Chance of a witch spawning within the first map of a campaign
versus_witch_flow_team_variation "0" // Window of flow distance that the witch can spawn in for the second team in versus
vgui_drawtree "0" // Draws the vgui panel hiearchy to the specified depth level.
vgui_drawtree_clear
vgui_dump_panels // vgui_dump_panels [visible]
vgui_spew_fonts
vgui_togglepanel // show/hide vgui panel by name.
viewanim_addkeyframe
viewanim_create // viewanim_create
viewanim_load // load animation from file
viewanim_reset // reset view angles!
viewanim_save // Save current animation to file
viewanim_test // test view animation
viewmodel_fov "50"
view_offset_down "16"
view_offset_forward "8"
view_offset_up "-16"
vismon_poll_frequency "0"
vismon_trace_limit "12"
vis_debug "0"
vis_force "0"
vm_debug "0"
voicerecord_toggle
voice_enable "1"
voice_forcemicrecord "1"
voice_inputfromfile "0" // Get voice input from voice_input.wav rather than from the microphone.
voice_loopback "0"
voice_modenable "1" // Enable/disable voice in this mod.
voice_mute_reset // Reset all mute information for players who were muted in game lobby
voice_recordtofile "0" // Record mic data and decompressed voice data into voice_micdata.wav and voice_decompressed.wav
voice_scale "0"
voice_spatialize "0" // Spatializes voice chat
voice_threshold "2000"
voice_vox "0" // Voice chat uses a vox-style always on
volume "0" // Sound volume
voxeltree_box // Vector(max)>.
voxeltree_playerview // View entities in the voxel-tree at the player position.
voxeltree_sphere // float(radius)>.
voxeltree_view // View entities in the voxel-tree.
vox_reload // Reload sentences.txt file
vphys_sleep_timeout // set sleep timeout: large values mean stuff wont ever sleep
vprof // Toggle VProf profiler
vprof_adddebuggroup1 // add a new budget group dynamically for debugging
vprof_cachemiss // Toggle VProf cache miss checking
vprof_cachemiss_off // Turn off VProf cache miss checking
vprof_cachemiss_on // Turn on VProf cache miss checking
vprof_child
vprof_collapse_all // Collapse the whole vprof tree
vprof_dump_counters // Dump vprof counters to the console
vprof_dump_groupnames // Write the names of all of the vprof groups to the console.
vprof_expand_all // Expand the whole vprof tree
vprof_expand_group // Expand a budget group in the vprof tree by name
vprof_generate_report // Generate a report to the console.
vprof_generate_report_AI // Generate a report to the console.
vprof_generate_report_AI_only // Generate a report to the console.
vprof_generate_report_budget // Generate a report to the console based on budget group.
vprof_generate_report_hierarchy // Generate a report to the console.
vprof_generate_report_hierarchy_per_frame_and_count_only // Generate a minimal hiearchical report to the console.
vprof_generate_report_map_load // Generate a report to the console.
vprof_graphheight "256"
vprof_graphwidth "512"
vprof_nextsibling
vprof_off // Turn off VProf profiler
vprof_on // Turn on VProf profiler
vprof_parent
vprof_playback_average // Average the next N frames.
vprof_playback_start // Start playing back a recorded .vprof file.
vprof_playback_step // step to the next tick.
vprof_playback_stepback // step to the previous tick.
vprof_playback_stop // Stop playing back a recorded .vprof file.
vprof_prevsibling
vprof_record_start // Start recording vprof data for playback later.
vprof_record_stop // Stop recording vprof data
vprof_remote_start // Request a VProf data stream from the remote server (requires authentication)
vprof_remote_stop // Stop an existing remote VProf data request
vprof_reset // Reset the stats in VProf profiler
vprof_reset_peaks // Reset just the peak time in VProf profiler
vprof_unaccounted_limit "0" // number of milliseconds that a node must exceed to turn red in the vprof panel
vprof_verbose "1" // Set to one to show average and peak times
vprof_vtune_group // enable vtune for a particular vprof group (disable to disable)
vprof_warningmsec "10" // Above this many milliseconds render the label red to indicate slow code.
vs_max_team_switches "1"
vs_tank_damage "24" // Amount of damage done by a vs tanks melee attack
vs_threat_initial_distance_first_map_max "12000" // Max distance of starting threat area in vs mode on the first map
vs_threat_initial_distance_first_map_min "8000" // Min distance of starting threat area in vs mode on the first map
vs_threat_initial_distance_max "8000" // Max distance of starting threat area in vs mode
vs_threat_initial_distance_min "3000" // Min distance of starting threat area in vs mode
vs_threat_radius "200" // Distance from the escape route for placing threats
vtune // Controls VTunes sampling.
warp_all_survivors_here // Warp all survivors to the players cursor
warp_all_survivors_to_battlefield // Warp all Survivors to the battlefield
warp_all_survivors_to_checkpoint // Warp all Survivors to the exit checkpoint
warp_all_survivors_to_finale // Warp all Survivors to the finale radio
warp_far_survivor_here // Teleport the farthest away Survivor to your cursor position
warp_to_start_area // Warp yourself to a survivor spawn area
weapon_reparse_client // Reloads the weapon script files
weapon_reparse_server // Reloads the weapon script files
windows_speaker_config "1"
wipe_attributes // Clear all attributes of selected area.
wipe_nav_attributes // Clear all nav attributes of selected area.
writeid // Writes a list of permanently-banned user IDs to banned_user.cfg.
writeip // Save the ban list to banned_ip.cfg.
xbox_autothrottle "1"
xbox_throttlebias "100"
xbox_throttlespoof "200"
xload // Load a saved game from a 360 storage device.
xlook
xmove
xsave // Saves current game to a 360 storage device.
z_acquire_far_range "2500"
z_acquire_far_time "5"
z_acquire_near_range "200"
z_acquire_near_time "0"
z_acquire_time_variance_factor "0"
z_add // Add an Infected - optional x y z arguments for world position to add them
z_added_light_debug "0"
z_alert_dot "0"
z_alert_range "1000"
z_allow_ai_to_use_abilities "1" // etc
z_attack_flow_range "1500"
z_attention_range_lying_modifier "0"
z_attention_range_sitting_modifier "0"
z_avoidforce "2500"
z_avoidteammates "1"
z_avoid_max_range "100"
z_avoid_min_range "30"
z_avoid_power "10"
z_award_debug "0" // Get debugging info on all award calcs to the console. (0|1|2|3 for none|yes-no thoughts|every thought|every spammy calc)
z_background_limit "20" // How many common infected are on the background map at once.
z_backspeed "450"
z_boomer_gibs "0"
z_boomer_near_dist "180"
z_boss_crouch "0" // Forces boss zombie bots to crouch
z_boundary_clear_type "1" // 1 = new creep
z_boundary_max_range "5000"
z_boundary_spread_speed "200"
z_brawl_chance "2"
z_breakable_damage "4"
z_burning_lifetime "30" // Number of seconds a burning zombie takes to crisp
z_camo_decay_rate "0" // How fast the camouflage effect dies on ragdolls
z_carry_max_mass "250"
z_chance "60"
z_claw_hit_pitch_max "20"
z_claw_hit_pitch_min "-20"
z_claw_hit_yaw_max "20"
z_claw_hit_yaw_min "-20"
z_clear_area_range "300"
z_clear_max_time "5"
z_clear_min_time "0"
z_clear_min_time_range "300"
z_clear_range "750"
z_close_target_notice_distance "60" // How far an attacking zombie will look for a nearby target on their way to their chosen victim.
z_common_limit "30" // How many common infecteds we can have at once.
z_cooldown_spawn_safety_range "1000"
z_cough_cloud_expire "14" // You dont cough after a smoke cloud has existed this long.
z_cough_cloud_initial_cough_delay "0" // You dont cough until smoke cloud exists for this long.
z_cough_cloud_radius "175" // How far from center of smoke cloud makes you cough.
z_cough_duration "5" // How long a cougher continuously coughs for.
z_cough_fatigue "3000" // lower will just slow.
z_cough_interval "20" // How often a cougher can cough.
z_credits_interval "0"
z_crouch_speed "75"
z_cull_timeout "5" // Grace period before player zombie is culled for being too far away
z_deafen_radius_one "100"
z_deafen_radius_three "200"
z_deafen_radius_two "150"
z_debug "0"
z_debug_activities "0"
z_debug_avoid "0"
z_debug_breakables "0"
z_debug_climb "0"
z_debug_cull "0"
z_debug_escape_scan "0"
z_debug_falling_damage "0"
z_debug_fog "0"
z_debug_infected_anim_report // Prints the servers layer info for the specified infected
z_debug_ledges "0"
z_debug_mob_spawn "0"
z_debug_neighbors "0"
z_debug_path_stress_test // Stress-tests Path::Compute() on an Infected. Optional argument is number of times to invoke Compute()
z_debug_population "0"
z_debug_spawnable_areas "0" // Draws areas mobs can spawn from in green (normal) or blue (marked as OBSCURED in the nav)
z_debug_spawn_ahead "0"
z_debug_spawn_set "-1" // 6=Above
z_debug_spawn_volumes "0" // Draws any active func_spawn_volume entities
z_debug_tank_spawn "1" // When console spawning a tank automatically give it to a player.
z_decals // Splat decals on all infected
z_density_region_length "1500"
z_destroy_on_attack "0" // destroy it. Useful for demos.
z_difficulty "0" // Impossible)
z_director_special_spawn_delay "10"
z_discard_min_range "1000" // Dont relocate PZs closer than this regardless of flow distance
z_discard_range "2500" // Discard Zombies farther away than this
z_dont_clear "0"
z_door_reopen_interval "0" // Closed doors can be re-opened after this amount of time
z_door_retry_interval "1" // Interval at which blocked doors will try to reopen
z_do_tracers "1" // Do we want tracers at all?
z_escape_route_alpha "25"
z_escape_route_force_visible "0"
z_exploding_health "50" // Exploding Zombie max health
z_exploding_limit "1"
z_exploding_shove_interval "10"
z_exploding_shove_max "5"
z_exploding_shove_min "4"
z_exploding_speed "175"
z_exploding_splat "50" // Boomers splat instead of making a thud when taking this much falling damage
z_exploding_splat_radius "200" // Boomers splattering on the ground make survivors inside this radius it
z_expressions "1"
z_falling_land_forward_speed "200" // Minimum falling speed to cause a stumbling forward landing animation to occur
z_falling_land_hard_speed "200" // Minimum falling speed to cause a hard landing animation to occur
z_falling_land_speed "200" // Minimum falling speed to cause a landing animation to occur
z_finale_chance "100"
z_finale_spawn_safety_range "600"
z_first_aid_cabinets "0"
z_forcezombiemodel "0" // remove variability in infected models and instead use the specified model from z_zombieforcemodelname
z_forcezombiemodelname "0" // base name for the model from the models/infected directory to use for all infected if z_forcezombiemodel is set.
z_force_attack_from_sound_range "750"
z_forwardspeed "450"
z_friendly_fire_forgiveness "1" // Ignore friendly fire that appears to be unintentional.
z_frustration "1"
z_frustration_blink_percent "0"
z_frustration_blink_rate "10"
z_frustration_lifetime "20" // Frustration will accumulate for this many seconds before forcing an AI tank takeover
z_frustration_los_delay "2"
z_frustration_spawn_delay "10"
z_gas_health "250" // Gas Zombie max health
z_gas_limit "1"
z_gas_speed "210"
z_ghost_checkpoint_spawn_interval "30" // Interval for spawning special zombies while survivors are in the checkpoint
z_ghost_finale_spawn_interval "20" // Interval for spawning special zombies during the finale
z_ghost_spawn_interval "60" // Interval for spawning special zombies
z_ghost_spawn_in_start "0" // Allow ghosts to materialize while players are in the start area
z_ghost_speed "450"
z_ghost_travel_distance "1000" // Ghosts this far away from survivors in travel distance can materialize regardless of linear distance from survivors
z_gib_limbs "25" // Limbs can be shot off infected when doing this much damage (0 disables)
z_gib_limb_distance "400" // Rifles and sniper rifles can dismember at this range
z_gib_limb_distance_buckshot "350" // Shotguns can dismember at this range
z_gib_limb_distance_headshot "2000" // Rifles and sniper rifles can decapitate at this range
z_gib_limb_distance_headshot_zoomed "4000" // Sniper rifles can decapitate at this range when zoomed
z_gib_limb_distance_zoomed "800" // Sniper rifles can dismember at this range when zoomed
z_grab_force "0" // For testing - always grab ledges regardless of estimated falling damage
z_grab_ledges_solo "0" // For testing - grab ledges even if youre the last survivor
z_gun_damage "10"
z_gun_debug_player_index "0"
z_gun_force "300"
z_gun_horiz_punch "0" // Toggles horizontal punchangles for guns
z_gun_kick "0" // Firing a gun can knock the players view this amount of the current spread
z_gun_physics_force "25" // How hard we push things that arent players or doors.
z_gun_range "75"
z_gun_stun_duration "1"
z_gun_survivor_force "200"
z_gun_survivor_friend_push "1" // Allow survivors to push survivors with a right click.
z_gun_survivor_shove_dot "0" // Max dot of a shove swing that can push a fellow survivor
z_gun_swing_duration "0"
z_gun_swing_interval "0"
z_gun_vertical_punch "1" // Toggles vertical punchangles for guns
z_health "50" // Zombie max health
z_hear_gunfire_range "200"
z_hear_runner_far_range "750"
z_hear_runner_near_range "500"
z_hit_from_behind_cosine "0"
z_hit_from_behind_factor "0" // Damage multiplier if zombie hits Survivor from behind
z_hit_incap_factor_easy "0" // Damage multiplier if zombie hits incapacitated Survivor
z_hit_incap_factor_expert "1" // Damage multiplier if zombie hits incapacitated Survivor
z_hit_incap_factor_hard "1" // Damage multiplier if zombie hits incapacitated Survivor
z_hit_incap_factor_normal "1" // Damage multiplier if zombie hits incapacitated Survivor
z_hunter_claw_buildup_growl_percent "0" // Hunter starts growling constantly.
z_hunter_claw_force "240" // Force with which the claw shoves other zombies away
z_hunter_claw_max_buildup_time "3" // Attack button held longer than this gets no extra benefit.
z_hunter_claw_plays_hit_anims "0" // Play the new hit anims for debugging?
z_hunter_claw_range "52" // Range of the Claw weapon
z_hunter_claw_range_down "70" // so it can reach your feet from your eyes.
z_hunter_claw_start_buildup_time "0" // Attack button released in less than this time is just a click.
z_hunter_claw_swing_duration "0"
z_hunter_claw_swing_interval "1"
z_hunter_claw_swing_miss_interval "0"
z_hunter_ground_normal "0"
z_hunter_health "250" // Zombie max health
z_hunter_limit "1"
z_hunter_lunge_stagger_time "1"
z_hunter_speed "300"
z_increment_head // Switch to next head bodygroup
z_increment_lower // Switch to next lower body bodygroup
z_increment_skin // Switch to next skin
z_increment_upper // Switch to next upper body bodygroup
z_infected_flashlight "1"
z_infected_invuln "0"
z_infected_move "1"
z_last_area_update_tolerance "4" // Distance a character needs to travel in order to invalidate cached area
z_last_man_run_interval "3"
z_lean_wall_align_speed "300"
z_look_at_local_player "0" // For demo purposes
z_lunge_interval "0"
z_lunge_power "600"
z_lunge_up "200"
z_max_blood_scale "3" // The biggest starting scale a blood puff can be.
z_max_hunter_pounce_stagger_duration "0" // Max time a PZ staggers when bashed by a survivor that was pounced by said hunter.
z_max_neighbor_range "200" // Max range for neighbor collection for avoidance
z_max_path_length "5000"
z_max_stagger_duration "6" // Max time a PZ staggers when bashed by a survivor.
z_mega_mob_size "50"
z_mega_mob_spawn_max_interval "900"
z_mega_mob_spawn_min_interval "420"
z_minigun_cooldown_time "3" // Minigun cooldown time
z_minigun_damage_rate "48000" // in health/minute
z_minigun_fire_think_interval "0"
z_minigun_overheat_time "20" // Minigun overheat time
z_minigun_rate_of_fire "1500" // in bullets/minute
z_minion_aim_tolerance "0"
z_minion_limit "3"
z_min_ladder_mount_dot "0" // Minimum 2D dot product from players view to a ladder to be able to grab it
z_mob_min_notify_count "10" // Mobs at least this large trigger mob events
z_mob_music_size "2" // Spotting a mob this large plays music
z_mob_population_density "0" // per square inch (0.0064 = 4 per 1x1 nav area)
z_mob_recharge_rate "0"
z_mob_sacrifice_timeout "5"
z_mob_spawn_finale_size "20"
z_mob_spawn_max_interval_easy "240"
z_mob_spawn_max_interval_expert "180"
z_mob_spawn_max_interval_hard "180"
z_mob_spawn_max_interval_normal "180"
z_mob_spawn_max_size "30"
z_mob_spawn_min_interval_easy "120"
z_mob_spawn_min_interval_expert "90"
z_mob_spawn_min_interval_hard "90"
z_mob_spawn_min_interval_normal "90"
z_mob_spawn_min_size "10"
z_must_wander "0" // For testing. 0: default. 1: wandering zombies dont sit/lie down. -1: wandering zombies always sit/lie down.
z_mute_infected "0" // etc
z_nav_debug "0"
z_nightvision_b "128"
z_nightvision_g "192"
z_nightvision_r "255"
z_noise_level_display "0" // Show noise levels on players?
z_noise_level_fade_rate "40" // after hold_time expires.
z_noise_level_footstep "50" // How much noise we make with a footstep.
z_noise_level_footstep_in_water "75" // How much noise we make with a footstep while in water.
z_noise_level_hold_time "0" // How long we hold a given noise level before it starts to fade.
z_noise_level_max "135" // The highest the noise level can go.
z_noise_level_vocalize "75" // How much noise we make when we say things.
z_non_head_damage_factor_easy "2" // Damage to zombie from non-headshots is multiplied by this factor
z_non_head_damage_factor_expert "0" // Damage to zombie from non-headshots is multiplied by this factor
z_non_head_damage_factor_hard "0" // Damage to zombie from non-headshots is multiplied by this factor
z_non_head_damage_factor_normal "1" // Damage to zombie from non-headshots is multiplied by this factor
z_notice_it_range "1500"
z_notice_near_range "100"
z_no_cull "0" // the Director will not cull common infected
z_player_lunge_up "150"
z_player_zombie_debug "0"
z_player_zombie_land_delay "0"
z_player_zombie_min_dead_time "2" // The minimum time a PC zombie must be dead before being eligible to respawn
z_pounce_allow_partial_hidden "1"
z_pounce_crouch_delay "1"
z_pounce_damage "5"
z_pounce_damage_delay "1"
z_pounce_damage_interrupt "50" // Taking this much damage interrupts a pounce attempt
z_pounce_damage_interval "0"
z_pounce_delay "0"
z_pounce_door_damage "500"
z_pounce_silence_range "500"
z_pounce_stumble_force "5" // Force of the stumble effect when a hunter pounces on someone
z_prevent_burrowing "1" // Use extra tracelines to prevent burrowing zombies
z_puking_eye_height "44"
z_pushaway_force "100" // How hard the infected shove non-IT Survivors out of their way to reach the IT victim
z_push_force "2000"
z_push_mass_max "200"
z_randombodygroups "1" // Set to zero to disable random body groups on infected
z_randomskins "1" // Set to zero to disable random skins on infected
z_reload_chatter_debug "0" // Should we give devtext explanations of why we didnt say Reloading?
z_reload_chatter_intensity "0" // Intensity level at which players start saying Reloading
z_reload_chatter_nearby_friend_range "600" // A friend needs to be this close to sayReloading
z_reload_chatter_recent_enemy "1" // An enemy needs to have been seen this recently to say Reloading
z_reload_chatter_shotgun_ammo_threshold "6" // Players dont say Reloading when reloading a shotgun that has this many shells already
z_reload_chatter_shotgun_interval "10"
z_removeitems // Removes all items from survivors
z_reset_population_counter // For debugging
z_respawn_distance "100" // Infected can try a respawn within this far of their original spawn
z_respawn_interval "10" // Infected can try a respawn within this many seconds of spawning
z_restrict_team_change "0"
z_round_start_replacement_time "30"
z_run_exertion_interval "1"
z_safe_spawn_range "250" // Minimum range for spawning special zombies
z_scout_mob_spawn_range "3000"
z_shotgun_bonus_damage_multiplier "5" // The multiplier to damage from a shotgun pellet within z_shotgun_bonus_damage_range range.
z_shotgun_bonus_damage_range "100" // A shotgun pellet hitting a common infected within this distance will get the z_shotgun_bonus_damage_multiplier bonus.
z_shove_friend_speed "130"
z_show_bottlenecks "0"
z_show_clear "0"
z_show_completely_visible_to_survivor_team "0"
z_show_damaging "0"
z_show_escape_route "0"
z_show_flow_delta "0"
z_show_flow_distance "0"
z_show_infected "0"
z_show_last_area "0" // Draws a line from each player to the center of their last known nav area
z_show_mutually_visible_set "0"
z_show_population_density "0"
z_show_potentially_visible "0"
z_show_potentially_visible_to_survivor_team "0"
z_show_swings "0"
z_show_traffic "0"
z_sidespeed "450"
z_skirmish_spawn_max_interval "90"
z_skirmish_spawn_max_size "4"
z_skirmish_spawn_min_interval "45"
z_skirmish_spawn_min_size "1"
z_spawn // or out
z_spawn_flow_limit "1500"
z_spawn_height "0" // Height above ground z_spawn places new infected
z_spawn_mobs_behind_chance "75" // Percentage chance that a mob will spawn behind the Survivor team
z_spawn_mobs_from_selected_set "0" // Spawn subsequent mobs from the currently selected set via the nav mesh editor
z_spawn_range "1500"
z_spawn_safety_range "550"
z_spawn_speed "450"
z_special_spawn_interval "45" // Interval for spawning special zombies
z_speed "250"
z_splat_survivor_pitch_max "25"
z_splat_survivor_pitch_min "15"
z_splat_survivor_shake_amplitude "50"
z_splat_survivor_shake_duration "1"
z_splat_survivor_shake_frequency "150"
z_splat_survivor_shake_radius "10"
z_splat_survivor_yaw_max "10"
z_splat_survivor_yaw_min "-10"
z_stagger_immunity_time "0" // How long after a hunter or smoker has been staggered until they can be staggered again.
z_state_debug "0" // Gives feedback on current zombie state.
z_stomp_always "0" // Force melee attacks on single infected to always be stomps.
z_stumble_max_curve_accel "5" // Rate of turn increase per second
z_stumble_max_curve_rate "10" // Maximum degrees/sec turning while stumbling forward
z_tanks_block_molotovs "1"
z_tank_attack_interval "1"
z_tank_autoshotgun_dmg_scale "0" // percent damage taken by the tank from the autoshotgun in versus
z_tank_burning_lifetime "75" // Number of seconds a burning tank takes to die in versus
z_tank_damage_slow_max_range "400" // Range at which Tank is slowed by gunfire
z_tank_damage_slow_min_range "200" // Range at which Tank is slowed by gunfire
z_tank_grenade_damage "750" // How much damage a Tank takes from a grenade.
z_tank_grenade_roll "-10"
z_tank_grenade_slowdown "0" // The speed setting put on a Tank when hit by a grenade.
z_tank_has_special_blood "0" // Does the Tank get his own blood effect instead of the normal infected one?
z_tank_health "4000" // Tank Zombie max health
z_tank_incapacitated_decay_rate "1" // How much health a dying Tank loses each update.
z_tank_incapacitated_health "5000" // Health Tank starts with in death throes.
z_tank_max_stagger_distance "400" // Max distance a Tank staggers when hurt by a grenade.
z_tank_max_stagger_duration "6" // Max time a Tank staggers when hit by a grenade.
z_tank_max_stagger_fade_duration "6" // Fade in time when a Tank is staggered by a grenade.
z_tank_rock_debug "0" // Show debug for the rock thinking about detonating on people.
z_tank_rock_radius "100"
z_tank_speed "210"
z_tank_speed_vs "210"
z_tank_stagger_fade_alpha "192" // How opaque the screen fade is when a Tank is hit by a grenade.
z_tank_stagger_fade_duration "3" // How long the screen fade lasts when a Tank is hit by a grenade.
z_tank_throw_fail_interval "0" // How soon a tank can try again after failing to throw.
z_tank_throw_force "800"
z_tank_throw_health "50" // Health of the tank projectile (0 disables)
z_tank_throw_interval "5" // How often a tank can throw.
z_tank_walk_speed "100"
z_terrify_duration "2"
z_throttle_hit_interval_easy "0" // Minimum time between damaging a Survivor from a mob
z_throttle_hit_interval_expert "1" // Minimum time between damaging a Survivor from a mob
z_throttle_hit_interval_hard "0" // Minimum time between damaging a Survivor from a mob
z_throttle_hit_interval_normal "0" // Minimum time between damaging a Survivor from a mob
z_throwforce "2500"
z_tracer_spacing "1" // One in how many bullets is a tracer in automatic weapons.
z_transitioning_players_remove "1"
z_use_tolerance "0"
z_view_distance "0" // etc)
z_vision_range "500" // How far a Zombie can see.
z_vision_range_alert "1500" // How far a Zombie can see when alert.
z_vision_range_obscured "500" // How far a Zombie can see in OBSCURED areas.
z_vision_range_obscured_alert "750" // How far a Zombie can see in OBSCURED areas when alert.
z_vocalize_burn_max_interval "3" // The maximum time between vocalizing being burned
z_vocalize_burn_min_interval "2" // The minimum time between vocalizing being burned
z_vocalize_shot_interval "0" // The minimum time between vocalizing being shot
z_vomit "1"
z_vomit_boxsize "1" // Size of vomit damage entities.
z_vomit_debug "0" // Visualize the vomit damage.
z_vomit_drag "0" // Air drag of vomit damage entities.
z_vomit_duration "1" // How long a puker continuously pukes for.
z_vomit_fade_duration "5" // How long the fade takes
z_vomit_fade_start "5" // When the vomit starts to fade away
z_vomit_fatigue "3000" // lower will just slow.
z_vomit_float "-130" // Upward float velocity of vomit damage entities.
z_vomit_hit_pitch_max "15"
z_vomit_hit_pitch_min "-15"
z_vomit_hit_yaw_max "10"
z_vomit_hit_yaw_min "-10"
z_vomit_interval "30" // How often a puker can puke.
z_vomit_lifetime "0" // Time to live of vomit damage entities.
z_vomit_maxdamagedist "350" // Maximum damage distance for vomit.
z_vomit_range "300"
z_vomit_slide_mult "0" // Multiplier for second texture slide rate
z_vomit_slide_rate "0" // Percentage of screen height per second
z_vomit_target_dot "0"
z_vomit_target_range "280"
z_vomit_vecrand "0" // Random vector added to initial velocity of vomit damage entities.
z_vomit_velocity "1700" // Initial velocity of vomit damage entities.
z_vomit_velocityfadeend "0" // Time at which attackers velocity contribution finishes fading.
z_vomit_velocityfadestart "0" // Time at which attackers velocity contribution starts to fade.
z_walk_speed "85"
z_wandering_density "0"
z_witch_allow_change_victim "1"
z_witch_anger_rate "0"
z_witch_attack_range "60"
z_witch_berserk_range "200"
z_witch_burn_time "15"
z_witch_damage "100"
z_witch_damage_per_kill_hit "30"
z_witch_discard_range "2000"
z_witch_flashlight_range "400"
z_witch_health "1000" // Witch max health
z_witch_hostile_at_me_anger "2"
z_witch_max_retreat_range "2000"
z_witch_max_threat_time "7"
z_witch_min_retreat_range "750"
z_witch_min_threat_time "5"
z_witch_personal_space "100"
z_witch_relax_rate "0"
z_witch_retreat_exit_hidden_duration "10"
z_witch_retreat_exit_range "1000"
z_witch_retreat_min_duration "10"
z_witch_speed "300"
z_witch_speed_inured "200"
z_witch_threat_hostile_range "600"
z_witch_threat_normal_range "300"
z_zombie_knockoff_death "0" // Knocking off a pouncing zombie instantly kills them.
z_zombie_lunge_push "0" // Does the zombie lunge push players?


